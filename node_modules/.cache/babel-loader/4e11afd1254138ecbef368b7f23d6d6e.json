{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useContext,useEffect}from'react';import LanguageContext from'../components/LanguageContext';var ParametresBanner=function ParametresBanner(){useEffect(function(){Array.from(document.querySelectorAll('.languages label')).map(function(label){if(label.id===language.language){return label.classList.add('lang-active');}return null;});});//LANGUAGE _____\nvar language=useContext(LanguageContext);var onChangeLanguage=function onChangeLanguage(e){language.updateLanguage(e.target.value);Array.from(document.querySelectorAll('.languages label')).map(function(label){if(label.id!==language.language){return label.classList.add('lang-active');}else{return label.classList.remove('lang-active');}});};// RENDER ____________\nreturn/*#__PURE__*/_jsxs(\"header\",{className:\"parametresBanner grid\",children:[/*#__PURE__*/_jsx(\"h1\",{children:language.language===\"Shakespeare\"?\"< Front-end developer />\":\"< Developpeur front-end />\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"languages\",onChange:onChangeLanguage,children:[/*#__PURE__*/_jsx(\"p\",{children:\"lang: \"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"Moliere\",id:\"Moliere\",className:\"hover\",children:[\"Moliere\",/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"language\",value:\"Moliere\"})]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"Shakespeare\",id:\"Shakespeare\",className:\"hover \",children:[\"Shakespeare\",/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"language\",value:\"Shakespeare\"})]})]})]});};export default ParametresBanner;","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/ParametresBanner.js"],"names":["React","useContext","useEffect","LanguageContext","ParametresBanner","Array","from","document","querySelectorAll","map","label","id","language","classList","add","onChangeLanguage","e","updateLanguage","target","value","remove"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAE3BF,SAAS,CAAC,UAAM,CACZG,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAAX,EAA0DC,GAA1D,CAA8D,SAAAC,KAAK,CAAG,CAClE,GAAGA,KAAK,CAACC,EAAN,GAAaC,QAAQ,CAACA,QAAzB,CAAkC,CAC9B,MAAOF,CAAAA,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,aAApB,CAAP,CACH,CACD,MAAO,KAAP,CACH,CALD,EAMD,CAPM,CAAT,CAUA;AAEA,GAAMF,CAAAA,QAAQ,CAAGX,UAAU,CAACE,eAAD,CAA3B,CAEA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,CAAC,CAAE,CACxBJ,QAAQ,CAACK,cAAT,CAAwBD,CAAC,CAACE,MAAF,CAASC,KAAjC,EAEAd,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAAX,EAA0DC,GAA1D,CAA8D,SAAAC,KAAK,CAAG,CAClE,GAAGA,KAAK,CAACC,EAAN,GAAaC,QAAQ,CAACA,QAAzB,CAAkC,CAC9B,MAAOF,CAAAA,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,aAApB,CAAP,CACH,CAFD,IAEK,CACD,MAAOJ,CAAAA,KAAK,CAACG,SAAN,CAAgBO,MAAhB,CAAuB,aAAvB,CAAP,CACH,CACJ,CAND,EAQH,CAXD,CAaA;AAEA,mBACI,gBAAQ,SAAS,CAAC,uBAAlB,wBACI,oBAAKR,QAAQ,CAACA,QAAT,GAAsB,aAAtB,wDAAL,EADJ,cAEI,aAAK,SAAS,CAAC,WAAf,CAA2B,QAAQ,CAAEG,gBAArC,wBACI,6BADJ,cAEI,eACI,OAAO,CAAC,SADZ,CAEI,EAAE,CAAC,SAFP,CAGI,SAAS,CAAC,OAHd,kCAKI,cAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,UAAzB,CAAoC,KAAK,CAAC,SAA1C,EALJ,GAFJ,cAUI,eACI,OAAO,CAAC,aADZ,CAEI,EAAE,CAAC,aAFP,CAGI,SAAS,CAAC,QAHd,sCAKI,cAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,UAAzB,CAAoC,KAAK,CAAC,aAA1C,EALJ,GAVJ,GAFJ,GADJ,CAuBH,CAtDD,CAwDA,cAAeX,CAAAA,gBAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport LanguageContext from '../components/LanguageContext';\n\nconst ParametresBanner = () => {\n    \n    useEffect(() => { \n        Array.from(document.querySelectorAll('.languages label')).map(label =>{\n            if(label.id === language.language){\n                return label.classList.add('lang-active')\n            }\n            return null;\n        })\n      });\n\n\n    //LANGUAGE _____\n\n    const language = useContext(LanguageContext);\n\n    const onChangeLanguage = e=>{\n        language.updateLanguage(e.target.value);\n        \n        Array.from(document.querySelectorAll('.languages label')).map(label =>{\n            if(label.id !== language.language){\n                return label.classList.add('lang-active')\n            }else{\n                return label.classList.remove('lang-active');\n            }\n        })\n   \n    }\n\n    // RENDER ____________\n\n    return (\n        <header className=\"parametresBanner grid\">\n            <h1>{language.language === \"Shakespeare\" ? `< Front-end developer />` : `< Developpeur front-end />` }</h1>\n            <div className=\"languages\" onChange={onChangeLanguage}>\n                <p>lang: </p>\n                <label \n                    htmlFor=\"Moliere\" \n                    id=\"Moliere\" \n                    className=\"hover\"\n                >Moliere\n                    <input type=\"radio\" name=\"language\" value=\"Moliere\" />\n                </label>\n                \n                <label \n                    htmlFor=\"Shakespeare\" \n                    id=\"Shakespeare\" \n                    className=\"hover \"     \n                >Shakespeare\n                    <input type=\"radio\" name=\"language\" value=\"Shakespeare\" />\n                </label>\n            </div>\n        </header>\n    );\n};\n\nexport default ParametresBanner;"]},"metadata":{},"sourceType":"module"}