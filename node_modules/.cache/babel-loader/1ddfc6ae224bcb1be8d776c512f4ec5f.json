{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/Mouse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n\nconst Mouse = () => {\n  _s();\n\n  useEffect(() => {\n    const cursor = document.querySelector('.cursor');\n    const innerCursor = cursor.querySelector('.inner-cursor');\n\n    const handleHover = link => {\n      switch (true) {\n        case link.classList.contains('hovTxt'):\n          cursor.classList.add('hoveredText');\n          break;\n\n        case link.classList.contains('tips'):\n          cursor.classList.add('tipsCursor');\n          innerCursor.textContent = link.dataset.txt;\n          break;\n\n        default:\n          //cursor.classList.add('hovered');\n          cursor.style.transform = \"scale(8)\";\n          break;\n      }\n    };\n\n    const handleLeave = () => {\n      if (cursor.classList.contains('hovered')) cursor.classList.remove('hovered');\n      if (cursor.classList.contains('hoveredText')) cursor.classList.remove('hoveredText');\n      if (cursor.classList.contains('tipsCursor')) cursor.classList.remove('tipsCursor');\n      innerCursor.textContent = '';\n    }; //position\n    // set the starting position of the cursor outside of the screen\n\n\n    let clientX = -100;\n    let clientY = -100;\n\n    const initCursor = () => {\n      // add listener to track the current mouse position\n      document.addEventListener(\"mousemove\", e => {\n        clientX = e.clientX;\n        clientY = e.clientY;\n      }); // transform the cursor to the current mouse position\n      // use requestAnimationFrame() for smooth performance\n\n      const render = () => {\n        cursor.style.transform = `translate(${clientX}px, ${clientY}px)`;\n        requestAnimationFrame(render);\n      };\n\n      requestAnimationFrame(render);\n    };\n\n    initCursor();\n    document.querySelectorAll('.hover').forEach(link => {\n      link.addEventListener('mouseover', () => {\n        if (link.classList.contains('active') || link.classList.contains('nav-active') || link.classList.contains('lang-active')) return;\n        handleHover(link);\n      });\n      link.addEventListener('mouseleave', handleLeave);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cursor cursor--outline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-cursor \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Mouse, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Mouse;\nexport default Mouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mouse\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/Mouse.js"],"names":["React","useEffect","Mouse","cursor","document","querySelector","innerCursor","handleHover","link","classList","contains","add","textContent","dataset","txt","style","transform","handleLeave","remove","clientX","clientY","initCursor","addEventListener","e","render","requestAnimationFrame","querySelectorAll","forEach"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGhBD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,UAAMC,WAAW,GAAGH,MAAM,CAACE,aAAP,CAAqB,eAArB,CAApB;;AAEA,UAAME,WAAW,GAAIC,IAAD,IAAS;AAEzB,cAAQ,IAAR;AACI,aAAKA,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAAL;AACIP,UAAAA,MAAM,CAACM,SAAP,CAAiBE,GAAjB,CAAqB,aAArB;AACA;;AACJ,aAAKH,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,MAAxB,CAAL;AACIP,UAAAA,MAAM,CAACM,SAAP,CAAiBE,GAAjB,CAAqB,YAArB;AACAL,UAAAA,WAAW,CAACM,WAAZ,GAA0BJ,IAAI,CAACK,OAAL,CAAaC,GAAvC;AACA;;AACJ;AACI;AACAX,UAAAA,MAAM,CAACY,KAAP,CAAaC,SAAb,GAAyB,UAAzB;AACA;AAXR;AAcH,KAhBD;;AAiBA,UAAMC,WAAW,GAAG,MAAK;AACrB,UAAGd,MAAM,CAACM,SAAP,CAAiBC,QAAjB,CAA0B,SAA1B,CAAH,EAAwCP,MAAM,CAACM,SAAP,CAAiBS,MAAjB,CAAwB,SAAxB;AACxC,UAAGf,MAAM,CAACM,SAAP,CAAiBC,QAAjB,CAA0B,aAA1B,CAAH,EAA4CP,MAAM,CAACM,SAAP,CAAiBS,MAAjB,CAAwB,aAAxB;AAC5C,UAAGf,MAAM,CAACM,SAAP,CAAiBC,QAAjB,CAA0B,YAA1B,CAAH,EAA2CP,MAAM,CAACM,SAAP,CAAiBS,MAAjB,CAAwB,YAAxB;AAC3CZ,MAAAA,WAAW,CAACM,WAAZ,GAA0B,EAA1B;AACH,KALD,CAtBY,CA8BZ;AAEA;;;AACA,QAAIO,OAAO,GAAG,CAAC,GAAf;AACA,QAAIC,OAAO,GAAG,CAAC,GAAf;;AAGA,UAAMC,UAAU,GAAG,MAAM;AACzB;AACAjB,MAAAA,QAAQ,CAACkB,gBAAT,CAA0B,WAA1B,EAAuCC,CAAC,IAAI;AACxCJ,QAAAA,OAAO,GAAGI,CAAC,CAACJ,OAAZ;AACAC,QAAAA,OAAO,GAAGG,CAAC,CAACH,OAAZ;AAEH,OAJD,EAFyB,CAQzB;AACA;;AACA,YAAMI,MAAM,GAAG,MAAM;AACjBrB,QAAAA,MAAM,CAACY,KAAP,CAAaC,SAAb,GAA0B,aAAYG,OAAQ,OAAMC,OAAQ,KAA5D;AAEAK,QAAAA,qBAAqB,CAACD,MAAD,CAArB;AACH,OAJD;;AAKAC,MAAAA,qBAAqB,CAACD,MAAD,CAArB;AACC,KAhBD;;AAkBAH,IAAAA,UAAU;AAIVjB,IAAAA,QAAQ,CAACsB,gBAAT,CAA0B,QAA1B,EAAoCC,OAApC,CAA4CnB,IAAI,IAAG;AAE/CA,MAAAA,IAAI,CAACc,gBAAL,CAAsB,WAAtB,EAAmC,MAAI;AACnC,YAAGd,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,QAAxB,KAAqCF,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,YAAxB,CAArC,IAA8EF,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,aAAxB,CAAjF,EAAwH;AACxHH,QAAAA,WAAW,CAACC,IAAD,CAAX;AACH,OAHD;AAIAA,MAAAA,IAAI,CAACc,gBAAL,CAAsB,YAAtB,EAAoCL,WAApC;AACH,KAPD;AASH,GApEQ,CAAT;AAsEA,sBAEI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH,CAnFD;;GAAMf,K;;KAAAA,K;AAqFN,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react'\n\nconst Mouse = () => {\n\n\n    useEffect(() => {\n        \n        const cursor = document.querySelector('.cursor');\n        const innerCursor = cursor.querySelector('.inner-cursor');\n        \n        const handleHover = (link) =>{\n            \n            switch (true) {\n                case link.classList.contains('hovTxt'): \n                    cursor.classList.add('hoveredText');                   \n                    break;\n                case link.classList.contains('tips'):\n                    cursor.classList.add('tipsCursor');   \n                    innerCursor.textContent = link.dataset.txt;\n                    break;\n                default:\n                    //cursor.classList.add('hovered');\n                    cursor.style.transform = \"scale(8)\";\n                    break;\n            }\n            \n        }\n        const handleLeave = () =>{\n            if(cursor.classList.contains('hovered'))cursor.classList.remove('hovered');\n            if(cursor.classList.contains('hoveredText'))cursor.classList.remove('hoveredText');\n            if(cursor.classList.contains('tipsCursor'))cursor.classList.remove('tipsCursor');\n            innerCursor.textContent = '';\n        }\n        \n       \n        //position\n\n        // set the starting position of the cursor outside of the screen\n        let clientX = -100;\n        let clientY = -100;\n        \n\n        const initCursor = () => {\n        // add listener to track the current mouse position\n        document.addEventListener(\"mousemove\", e => {\n            clientX = e.clientX;\n            clientY = e.clientY;\n            \n        });\n        \n        // transform the cursor to the current mouse position\n        // use requestAnimationFrame() for smooth performance\n        const render = () => {\n            cursor.style.transform = `translate(${clientX}px, ${clientY}px)`;\n            \n            requestAnimationFrame(render);\n        };\n        requestAnimationFrame(render);\n        };\n\n        initCursor();\n\n       \n           \n        document.querySelectorAll('.hover').forEach(link =>{\n            \n            link.addEventListener('mouseover', ()=>{\n                if(link.classList.contains('active') || link.classList.contains('nav-active') || link.classList.contains('lang-active'))return;\n                handleHover(link);\n            } );\n            link.addEventListener('mouseleave', handleLeave);       \n        })\n\n    })\n    \n    return (\n        \n        <div className=\"cursor cursor--outline\">\n            <div className=\"inner-cursor \">\n\n            </div>\n        </div>\n      \n        \n    );\n}\n\nexport default Mouse;"]},"metadata":{},"sourceType":"module"}