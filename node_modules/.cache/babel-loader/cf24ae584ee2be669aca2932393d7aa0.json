{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/IsometricBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst IsometricBlock = props => {\n  _s();\n\n  const [hoverState, setHoverState] = useState(false);\n\n  const handleMouseEnter = e => {\n    setHoverState(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHoverState(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"iso-block\",\n    onMouseLeave: handleMouseLeave,\n    onMouseEnter: handleMouseEnter,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), [...Array(props.number)].map((number, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: { ...(hoverState && {\n            transform: `translate(${i * 10}px, -${i * 10}px)`,\n            opacity: `${(1 + i) / props.number}`\n          })\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: { ...(hoverState && {\n          transform: `translate(${props.number * 10}px, -${props.number * 10}px)`,\n          opacity: `${props.number / 10}`\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(props.icon, {\n        style: {\n          color: props.color\n        },\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, props.language, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsometricBlock, \"vHkr/NEy+niw7qWJF0MG1A4U1Ts=\");\n\n_c = IsometricBlock;\nexport default IsometricBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsometricBlock\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/IsometricBlock.js"],"names":["React","useState","IsometricBlock","props","hoverState","setHoverState","handleMouseEnter","e","handleMouseLeave","Array","number","map","i","transform","opacity","color","language"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAE5B,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMK,gBAAgB,GAAIC,CAAD,IAAO;AAC5BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIE,QAAMG,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAOF,sBACI;AAEI,IAAA,SAAS,EAAC,WAFd;AAGI,IAAA,YAAY,EAAEG,gBAHlB;AAII,IAAA,YAAY,EAAEF,gBAJlB;AAAA,4BAMI;AAAA;AAAA;AAAA;AAAA,YANJ,EAOK,CAAC,GAAGG,KAAK,CAACN,KAAK,CAACO,MAAP,CAAT,EAAyBC,GAAzB,CAA6B,CAACD,MAAD,EAASE,CAAT,KAAa;AAExC,0BAAQ;AAEK,QAAA,KAAK,EAAE,EAAC,IAAIR,UAAU,IAAI;AAACS,YAAAA,SAAS,EAAE,aAAYD,CAAC,GAAC,EAAG,QAAOA,CAAC,GAAC,EAAG,KAAzC;AAA+CE,YAAAA,OAAO,EAAE,GAAE,CAAC,IAAEF,CAAH,IAAMT,KAAK,CAACO,MAAO;AAA7E,WAAlB;AAAD;AAFZ,SACUE,CADV;AAAA;AAAA;AAAA;AAAA,cAAR;AAIF,KANA,CAPL,eAcI;AAAM,MAAA,KAAK,EAAE,EAAC,IAAIR,UAAU,IAAI;AAACS,UAAAA,SAAS,EAAE,aAAYV,KAAK,CAACO,MAAN,GAAa,EAAG,QAAOP,KAAK,CAACO,MAAN,GAAa,EAAG,KAA/D;AAAoEI,UAAAA,OAAO,EAAE,GAAEX,KAAK,CAACO,MAAN,GAAa,EAAG;AAA/F,SAAlB;AAAD,OAAb;AAAA,6BACI,QAAC,KAAD,CAAO,IAAP;AAAa,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAEZ,KAAK,CAACY;AAAd,SAApB;AAA0C,QAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,KACSZ,KAAK,CAACa,QADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlCD;;GAAMd,c;;KAAAA,c;AAoCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst IsometricBlock = props => {\n\n    const [ hoverState, setHoverState ] = useState(false);\n    const handleMouseEnter = (e) => {\n        setHoverState(true);\n    }\n     \n      const handleMouseLeave = () => {\n        setHoverState(false);\n      }\n\n\n    \n\n    return (\n        <li \n            key={props.language} \n            className=\"iso-block\"\n            onMouseLeave={handleMouseLeave} \n            onMouseEnter={handleMouseEnter}\n        >\n            <span></span>\n            {[...Array(props.number)].map((number, i)=>{\n                 \n               return  <span \n                            key={i}\n                            style={{...(hoverState && {transform:`translate(${i*10}px, -${i*10}px)`, opacity:`${(1+i)/props.number}`})}}\n                        ></span>\n            })}\n            <span style={{...(hoverState && {transform:`translate(${props.number*10}px, -${props.number*10}px)`,opacity:`${props.number/10}` })}}>\n                <props.icon  style={{color: props.color}} size={30}/>\n            </span>\n        </li>\n    );\n};\n\nexport default IsometricBlock;"]},"metadata":{},"sourceType":"module"}