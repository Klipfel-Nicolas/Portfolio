{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/ProjectList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { BoxGeometry } from \"three\";\n\nconst ProjectList = () => {\n  _s();\n\n  useEffect(() => {\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    /* Create Lights: PointLight / SpotLight etc.*/\n\n    var spotLight = new THREE.SpotLight(0xffffff);\n    spotLight.position.set(100, 100, 100);\n    spotLight.castShadow = true; //If set to true light will cast dynamic shadows. Warning: This is expensive and requires tweaking to get shadows looking right.\n\n    spotLight.shadowMapWidth = 1024;\n    spotLight.shadowMapHeight = 1024;\n    spotLight.shadowCameraNear = 500;\n    spotLight.shadowCameraFar = 4000;\n    spotLight.shadowCameraFov = 30;\n    scene.add(spotLight);\n    /* Create Material */\n\n    function Mat() {\n      var material = new THREE.MeshPhongMaterial({\n        color: new THREE.Color(\"rgb(35,35,213)\"),\n        //Diffuse color of the material\n        emissive: new THREE.Color(\"rgb(64,128,255)\"),\n        //Emissive(light) color of the material, essentially a solid color unaffected by other lighting. Default is black.\n        specular: new THREE.Color(\"rgb(93,195,255)\"),\n\n        /*Specular color of the material, i.e., how shiny the material is and the color of its shine. \n          Setting this the same color as the diffuse value (times some intensity) makes the material more metallic-looking; \n          setting this to some gray makes the material look more plastic. Default is dark gray.*/\n        shininess: 1,\n        //How shiny the specular highlight is; a higher value gives a sharper highlight. Default is 30.\n        shading: THREE.FlatShading,\n        //How the triangles of a curved surface are rendered: THREE.SmoothShading, THREE.FlatShading, THREE.NoShading\n        wireframe: 1,\n        //THREE.Math.randInt(0,1)\n        transparent: 1,\n        opacity: 0.15 //THREE.Math.randFloat(0,1) \n\n      });\n      return material;\n    }\n    /* Create Geometry */\n\n\n    var geometry = new THREE.SphereGeometry(50, 20, 20, 0, Math.PI * 2, 0, Math.PI); //SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength)\n\n    /* Create Earth Sphere*/\n\n    var earth = new THREE.Mesh(geometry, Mat());\n    /*\n    var numSphere = 30;\n    var tabSphere = [];\n    for(var i=0: i<numSphere; i++){\n      tabShpere.push(new Sphere(i));\n      scene.add(tabSphere[i].b);\n    }\n    */\n\n    scene.add(earth);\n    camera.position.z = 90;\n\n    function render() {\n      requestAnimationFrame(render);\n      earth.rotation.x += 0.01;\n      earth.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    }\n\n    render();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"li-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"<\\\\li>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"<\\\\li>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"<\\\\li>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProjectList;\nexport default ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/ProjectList.js"],"names":["React","useEffect","THREE","BoxGeometry","ProjectList","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","spotLight","SpotLight","position","set","castShadow","shadowMapWidth","shadowMapHeight","shadowCameraNear","shadowCameraFar","shadowCameraFov","add","Mat","material","MeshPhongMaterial","color","Color","emissive","specular","shininess","shading","FlatShading","wireframe","transparent","opacity","geometry","SphereGeometry","Math","PI","earth","Mesh","z","render","requestAnimationFrame","rotation","x","y"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { BoxGeometry } from \"three\";\n\nconst ProjectList = () => {\n    \n    useEffect(() => {\n        let scene = new THREE.Scene();\n        let camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\n        let renderer = new THREE.WebGLRenderer();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        document.body.appendChild(renderer.domElement);\n\n\n\n/* Create Lights: PointLight / SpotLight etc.*/\nvar spotLight = new THREE.SpotLight(0xffffff);\nspotLight.position.set(100,100,100);\nspotLight.castShadow = true; //If set to true light will cast dynamic shadows. Warning: This is expensive and requires tweaking to get shadows looking right.\nspotLight.shadowMapWidth = 1024;\nspotLight.shadowMapHeight = 1024;\nspotLight.shadowCameraNear = 500;\nspotLight.shadowCameraFar = 4000;\nspotLight.shadowCameraFov = 30;\nscene.add(spotLight);\n\n/* Create Material */\nfunction Mat(){\n  var material = new THREE.MeshPhongMaterial({\n    color      : new THREE.Color(\"rgb(35,35,213)\"),  //Diffuse color of the material\n    emissive   : new THREE.Color(\"rgb(64,128,255)\"), //Emissive(light) color of the material, essentially a solid color unaffected by other lighting. Default is black.\n    specular   : new THREE.Color(\"rgb(93,195,255)\"), /*Specular color of the material, i.e., how shiny the material is and the color of its shine. \n                                                       Setting this the same color as the diffuse value (times some intensity) makes the material more metallic-looking; \n                                                       setting this to some gray makes the material look more plastic. Default is dark gray.*/\n    shininess  : 1,                                  //How shiny the specular highlight is; a higher value gives a sharper highlight. Default is 30.\n    shading    : THREE.FlatShading,                  //How the triangles of a curved surface are rendered: THREE.SmoothShading, THREE.FlatShading, THREE.NoShading\n    wireframe  : 1,                                  //THREE.Math.randInt(0,1)\n    transparent: 1,\n    opacity    : 0.15                                //THREE.Math.randFloat(0,1) \n  });\n  return material;\n}\n\n/* Create Geometry */\nvar geometry = new THREE.SphereGeometry(50,20,20,0,Math.PI*2,0,Math.PI);\n//SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength)\n\n/* Create Earth Sphere*/\nvar earth = new THREE.Mesh(geometry, Mat());\n\n/*\nvar numSphere = 30;\nvar tabSphere = [];\nfor(var i=0: i<numSphere; i++){\n  tabShpere.push(new Sphere(i));\n  scene.add(tabSphere[i].b);\n}\n*/\n\nscene.add(earth);\n\ncamera.position.z = 90;\n\n\n\n\nfunction render(){\n  requestAnimationFrame(render);\n  earth.rotation.x += 0.01;\n  earth.rotation.y += 0.01;\n  renderer.render(scene, camera);\n}\nrender();\n    }, [])\n    \n    \n    return (\n        <div id=\"li-container\">\n            <ul>\n              \n              <li>\n                <span>&lt;\\li&gt;</span>\n              </li>\n\n              <li>\n                <span>&lt;\\li&gt;</span>\n              </li>\n\n              <li>\n                <span>&lt;\\li&gt;</span>\n              </li>\n              \n            </ul>\n        </div>\n    )\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}