{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/PeriodicSkills.js\";\nimport React, { Component } from 'react';\nimport * as THREE from \"three\";\nimport { CSS3DObject, CSS3DRenderer } from 'three-css3drenderer';\nimport TrackballControls from 'three-trackballcontrols';\nimport { table } from \"../data/skillsThree\";\nimport * as TWEEN from 'tween.js';\nimport DestrucBtn from './DestrucBtn';\n\nclass PeriodicSkills extends Component {\n  componentDidMount() {\n    // THREE PARAMETRES\n    let scene, camera, renderer, controls;\n    const objects = [];\n    const targets = {\n      grid: [],\n      helix: [],\n      table: [],\n      sphere: []\n    };\n    const container = document.getElementById('periodic-container');\n    const width = container.offsetWidth;\n    const height = container.offsetHeight;\n    init();\n    animation();\n    onWindowResize();\n\n    function init() {\n      const felidView = 40;\n      const aspect = width / height;\n      const nearPlane = 0.1;\n      const farPlane = 1000;\n      const WebGloutput = container;\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(felidView, aspect, nearPlane, farPlane);\n      camera.position.z = 1500; //ELEMENTS\n\n      for (let i = 0; i < table.length; i += 5) {\n        const element = document.createElement('div');\n        element.className = 'element hover hovTxt';\n        element.dataset.txt = \"drag\";\n        element.style.backgroundColor = `rgba(0, 127, 127, ${Math.random() * 0.5 + 0.25})`;\n        const number = document.createElement('div');\n        number.className = 'number';\n        number.textContent = i / 5 + 1;\n        element.appendChild(number);\n        const symbol = document.createElement('div');\n        symbol.className = 'symbol';\n        symbol.textContent = table[i];\n        element.appendChild(symbol);\n        const detail = document.createElement('div');\n        detail.className = 'detail';\n        detail.innerHTML = `${table[i + 1]} <br/> ${table[i + 2]}`;\n        element.appendChild(detail);\n        const card = new CSS3DObject(element);\n        card.position.x = Math.random() * width - width / 2;\n        card.position.y = Math.random() * 1000 - 600;\n        card.position.z = Math.random() * 1000 - 800;\n        scene.add(card);\n        objects.push(card); //TABLE\n\n        const object = new THREE.Object3D();\n        object.position.x = table[i + 3] * 140 - width / 3;\n        object.position.y = -table[i + 4] * 180 + height / 1.5;\n        object.position.z = 0;\n        targets.table.push(object);\n      } //SPHERE\n\n\n      function sphere() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = Math.acos(-1 + 2 * i / objects.length);\n          let theta = Math.sqrt(objects.length * Math.PI) * phi;\n          var object = new THREE.Object3D();\n          object.position.x = 800 * Math.cos(theta) * Math.sin(phi);\n          object.position.y = 800 * Math.sin(theta) * Math.sin(phi);\n          object.position.z = 800 * Math.cos(phi); //rotation object\n\n          vector.copy(object.position).multiplyScalar(2);\n          object.lookAt(vector);\n          targets.sphere.push(object);\n        }\n      }\n\n      sphere(); // HELIX\n\n      function helix() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = i * 0.739 + Math.PI;\n          const object = new THREE.Object3D();\n          object.position.x = 800 * Math.sin(phi);\n          object.position.y = -(i * 8) + 50;\n          object.position.z = 800 * Math.cos(phi + Math.PI);\n          object.scale.set(1.1, 1.1, 1.1);\n          vector.x = object.position.x * 2;\n          vector.y = object.position.y;\n          vector.z = object.position.z * 2;\n          object.lookAt(vector);\n          targets.helix.push(object);\n        }\n      }\n\n      helix(); //GRID \n\n      for (let i = 0; i < objects.length; i++) {\n        const object = new THREE.Object3D();\n        object.position.x = 360 * (i % 3) - 350;\n        object.position.y = -360 * ((i / 3 >> 0) % 3) + 350;\n        object.position.z = -700 * (i / 9 >> 0);\n        targets.grid.push(object);\n      } //RENDERER\n\n\n      renderer = new CSS3DRenderer();\n      renderer.setSize(width, height);\n      renderer.domElement.style.position = 'absolute';\n      WebGloutput.appendChild(renderer.domElement); //CAMERA CONTROLE\n\n      controls = new TrackballControls(camera, renderer.domElement);\n      controls.rotateSpeed = 2;\n      controls.minDistance = 1000;\n      controls.maxDistance = 4000;\n      controls.addEventListener('change', render);\n      const gridBtn = document.getElementById('grid');\n      const tableBtn = document.getElementById('table');\n      const helixBtn = document.getElementById('helix');\n      const sphereBtn = document.getElementById('sphere');\n      gridBtn.addEventListener('click', function () {\n        transform(targets.grid, 2000);\n      }, false);\n      tableBtn.addEventListener('click', function () {\n        transform(targets.table, 2000);\n      }, false);\n      helixBtn.addEventListener('click', function () {\n        transform(targets.helix, 2000);\n      }, false);\n      sphereBtn.addEventListener('click', function () {\n        transform(targets.sphere, 2000);\n      }, false);\n      transform(targets.table, 2000);\n    }\n\n    ;\n\n    function transform(targets, duration) {\n      TWEEN.removeAll();\n\n      for (let i = 0; i < objects.length; ++i) {\n        let object = objects[i];\n        let target = targets[i];\n        new TWEEN.Tween(object.position).to({\n          x: target.position.x,\n          y: target.position.y,\n          z: target.position.z\n        }, Math.random() * duration + duration).easing(TWEEN.Easing.Exponential.InOut).start();\n        new TWEEN.Tween(object.rotation).to({\n          x: target.rotation.x,\n          y: target.rotation.y,\n          z: target.rotation.z\n        }, Math.random() * duration + duration).easing(TWEEN.Easing.Exponential.InOut).start();\n      }\n\n      new TWEEN.Tween({}).to({}, duration * 2).onUpdate(render).start();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function onWindowResize() {\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n      render();\n    }\n\n    function animation() {\n      requestAnimationFrame(animation);\n      TWEEN.update();\n      controls.update();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"periodic-container\",\n      className: \"hover hovTxt\",\n      \"data-txt\": \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"table\",\n          children: /*#__PURE__*/_jsxDEV(DestrucBtn, {\n            word: \"TABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"sphere\",\n          children: /*#__PURE__*/_jsxDEV(DestrucBtn, {\n            word: \"SPHERE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"helix\",\n          children: /*#__PURE__*/_jsxDEV(DestrucBtn, {\n            word: \"HELIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"grid\",\n          children: /*#__PURE__*/_jsxDEV(DestrucBtn, {\n            word: \"GRID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PeriodicSkills;","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/PeriodicSkills.js"],"names":["React","Component","THREE","CSS3DObject","CSS3DRenderer","TrackballControls","table","TWEEN","DestrucBtn","PeriodicSkills","componentDidMount","scene","camera","renderer","controls","objects","targets","grid","helix","sphere","container","document","getElementById","width","offsetWidth","height","offsetHeight","init","animation","onWindowResize","felidView","aspect","nearPlane","farPlane","WebGloutput","Scene","PerspectiveCamera","position","z","i","length","element","createElement","className","dataset","txt","style","backgroundColor","Math","random","number","textContent","appendChild","symbol","detail","innerHTML","card","x","y","add","push","object","Object3D","vector","Vector3","phi","acos","theta","sqrt","PI","cos","sin","copy","multiplyScalar","lookAt","scale","set","setSize","domElement","rotateSpeed","minDistance","maxDistance","addEventListener","render","gridBtn","tableBtn","helixBtn","sphereBtn","transform","duration","removeAll","target","Tween","to","easing","Easing","Exponential","InOut","start","rotation","onUpdate","updateProjectionMatrix","requestAnimationFrame","update"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as THREE from \"three\";\nimport { CSS3DObject, CSS3DRenderer } from 'three-css3drenderer';\nimport TrackballControls from 'three-trackballcontrols';\nimport { table } from \"../data/skillsThree\";\nimport * as TWEEN from 'tween.js'\nimport DestrucBtn from './DestrucBtn';\n\nclass PeriodicSkills extends Component {\n\n\n    componentDidMount(){\n        \n        // THREE PARAMETRES\n        let scene, camera, renderer, controls;\n        const objects = [];\n        const targets = {\n            grid: [],\n            helix: [],\n            table:[],\n            sphere:[]\n        };\n        const container = document.getElementById('periodic-container');\n        const width = container.offsetWidth;\n        const height = container.offsetHeight;\n        init();\n        animation();\n        onWindowResize()\n\n        function init(){\n            \n            const felidView = 40;\n            \n            const aspect = width / height;\n            const nearPlane = 0.1;\n            const farPlane = 1000;\n            const WebGloutput = container;\n\n            scene = new THREE.Scene();\n            \n            camera = new THREE.PerspectiveCamera( felidView, aspect, nearPlane, farPlane);\n            camera.position.z = 1500;\n       \n        //ELEMENTS\n        \n            for( let i=0; i < table.length; i +=5 ) {\n                const element = document.createElement('div');\n                element.className = 'element hover hovTxt';\n                element.dataset.txt = \"drag\";\n                element.style.backgroundColor = `rgba(0, 127, 127, ${ Math.random() * 0.5 + 0.25})`;\n\n                const number = document.createElement('div');\n                number.className = 'number';\n                number.textContent = i / 5 + 1;\n                element.appendChild(number);\n\n                const symbol = document.createElement('div');\n                symbol.className = 'symbol';\n                symbol.textContent = table[ i ];\n                element.appendChild(symbol);\n\n                const detail = document.createElement('div');\n                detail.className = 'detail';\n                detail.innerHTML = `${ table[ i+1 ]} <br/> ${ table[ i+2 ]}`;\n                element.appendChild(detail);\n\n                const card = new CSS3DObject( element );\n                card.position.x = Math.random() * width - (width/2);\n                card.position.y = Math.random() * 1000 - 600 ;\n                card.position.z = Math.random() * 1000 - 800;\n\n                scene.add(card);\n                objects.push( card );\n\n                //TABLE\n\n                const object = new THREE.Object3D();\n                object.position.x = table[i + 3] * 140 - (width/3); \n                object.position.y = -table[i + 4] * 180 + (height/1.5); \n                object.position.z = 0;\n\n                targets.table.push(object);\n            } \n\n    \n            \n            \n\n    //SPHERE\n            function sphere(){\n                const vector = new THREE.Vector3();\n\n                for (let i =0; i< objects.length; ++i){\n                    let phi = Math.acos(-1 + ( 2 * i )/ objects.length);\n                    let theta = Math.sqrt( objects.length * Math.PI ) * phi;\n                    \n                    var object = new THREE.Object3D();\n\n                    object.position.x = 800 * Math.cos( theta ) * Math.sin( phi );\n                    object.position.y = 800 * Math.sin( theta ) * Math.sin( phi ); \n                    object.position.z = 800 * Math.cos( phi );\n\n                    //rotation object\n\n                    vector.copy( object.position ).multiplyScalar(2);\n                    object.lookAt( vector );\n                    targets.sphere.push( object );\n                }\n            }\n            sphere()\n    // HELIX\n            function helix(){\n                const vector = new THREE.Vector3();\n\n                for(let i=0; i<objects.length; ++i){\n\n                    let phi = i * 0.739 + Math.PI;\n                    const object = new THREE.Object3D();\n                    object.position.x = 800  * Math.sin( phi );\n                    object.position.y = -( i * 8 ) + 50;\n                    object.position.z = 800  * Math.cos( phi + Math.PI );\n            \n                    object.scale.set( 1.1, 1.1, 1.1 );\n            \n                    vector.x = object.position.x * 2;\n                    vector.y = object.position.y;\n                    vector.z = object.position.z * 2;\n            \n                    object.lookAt( vector );\n                    targets.helix.push( object );\n\n                }\n            }\n            \n            helix()\n    //GRID \n            \n                for (let i =0 ; i<objects.length; i++ ) {\n    \n                    const object = new THREE.Object3D();\n            \n                    object.position.x =  360  * ( i   % 3) - 350;\n\t                object.position.y = -360  * ( ( i /  3 >> 0 ) % 3 ) + 350;\n\t                object.position.z = -700  * ( i / 9 >> 0 );\n\n            \n                    targets.grid.push( object );\n                    \n                }\n\n\n                //RENDERER\n                renderer = new CSS3DRenderer();\n                renderer.setSize( width, height);\n                renderer.domElement.style.position = 'absolute';\n                WebGloutput.appendChild( renderer.domElement);\n            \n                //CAMERA CONTROLE\n                controls = new TrackballControls( camera, renderer.domElement );\n\t\t\t\tcontrols.rotateSpeed = 2;\n\t\t\t\tcontrols.minDistance = 1000;\n\t\t\t\tcontrols.maxDistance = 4000;\n\t\t\t\tcontrols.addEventListener( 'change', render );\n\n            const gridBtn = document.getElementById('grid');\n            const tableBtn = document.getElementById('table');\n            const helixBtn = document.getElementById('helix');\n            const sphereBtn = document.getElementById('sphere');\n\n            \n            gridBtn.addEventListener('click', function() { transform( targets.grid, 2000 )}, false );\n            tableBtn.addEventListener('click', function() { transform( targets.table, 2000 ) }, false );\n            helixBtn.addEventListener('click', function() { transform( targets.helix, 2000 ) }, false );\n            sphereBtn.addEventListener('click', function() { transform( targets.sphere, 2000 ) }, false );\n\n            transform( targets.table, 2000 );\n        };\n        \n        function transform( targets, duration){\n            TWEEN.removeAll();\n\n            for(let i = 0; i< objects.length; ++i){\n                let object = objects[i];\n                let target = targets[i];\n\n                new TWEEN.Tween(object.position)\n                    .to({ x: target.position.x, y: target.position.y, z: target.position.z}, Math.random() * duration + duration)\n                    .easing( TWEEN.Easing.Exponential.InOut )\n                    .start();\n\n                new TWEEN.Tween( object.rotation )\n\t                .to( { x: target.rotation.x, y: target.rotation.y, z: target.rotation.z },Math.random() * duration + duration )\n\t                .easing( TWEEN.Easing.Exponential.InOut )\n\t                .start();\n\n            }\n\n        \n            new TWEEN.Tween({})\n                .to({}, duration * 2)\n                .onUpdate( render )\n                .start();\n        }\n\n        function render() {\n\n            renderer.render( scene, camera );\n\n        }\n\n        function onWindowResize(){\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n\n            renderer.setSize( width, height);\n            render();\n        }\n        \n\n        function animation(){\n            requestAnimationFrame( animation );\n            TWEEN.update();\n            controls.update();\n            \n        }\n\n    \n    }\n    \n\n    render () {\n        \n        return (\n            <div id=\"periodic-container\" className=\"hover hovTxt\" data-txt=\"scroll\">\n    \t     \n                <div id=\"menu\">\n                    <div id=\"table\"><DestrucBtn word={\"TABLE\"}/></div>\n                    <div id=\"sphere\"><DestrucBtn word={\"SPHERE\"}/></div>\n                    <div id=\"helix\"><DestrucBtn word={\"HELIX\"}/></div>\n                    <div id=\"grid\"><DestrucBtn word={\"GRID\"}/></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PeriodicSkills;"]},"metadata":{},"sourceType":"module"}