{"ast":null,"code":"import _objectSpread from\"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from'react';var IsometricBlock=function IsometricBlock(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hoverState=_useState2[0],setHoverState=_useState2[1];var handleMouseEnter=function handleMouseEnter(e){setHoverState(true);};var handleMouseLeave=function handleMouseLeave(){setHoverState(false);};return/*#__PURE__*/_jsxs(\"li\",{className:\"iso-list-item\",onMouseLeave:handleMouseLeave,onMouseEnter:handleMouseEnter,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"iso-block\",children:[/*#__PURE__*/_jsx(\"span\",{}),_toConsumableArray(Array(props.number)).map(function(number,i){return/*#__PURE__*/_jsx(\"span\",{style:_objectSpread({},hoverState&&{transform:\"translate(\".concat(i*10,\"px, -\").concat(i*10,\"px)\"),opacity:\"\".concat((1+i)/10)})},i);}),/*#__PURE__*/_jsx(\"span\",{style:_objectSpread({},hoverState&&{transform:\"translate(\".concat(props.number*10,\"px, -\").concat(props.number*10,\"px)\"),opacity:\"\".concat(props.number/10)}),children:/*#__PURE__*/_jsx(props.icon,{style:{color:props.color},size:30})})]}),/*#__PURE__*/_jsx(\"h4\",{children:props.language})]},props.language);};export default IsometricBlock;","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/IsometricBlock.js"],"names":["React","useState","IsometricBlock","props","hoverState","setHoverState","handleMouseEnter","e","handleMouseLeave","Array","number","map","i","transform","opacity","color","language"],"mappings":"qnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,eAEUF,QAAQ,CAAC,KAAD,CAFlB,wCAEpBG,UAFoB,eAERC,aAFQ,eAI5B,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAO,CAC5BF,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,CAIA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BH,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,CAKA,mBACI,YACI,SAAS,CAAC,eADd,CAGI,YAAY,CAAEG,gBAHlB,CAII,YAAY,CAAEF,gBAJlB,wBAMI,aAAK,SAAS,CAAC,WAAf,wBACI,eADJ,CAEK,mBAAIG,KAAK,CAACN,KAAK,CAACO,MAAP,CAAT,EAAyBC,GAAzB,CAA6B,SAACD,MAAD,CAASE,CAAT,CAAa,CAE3C,mBAAQ,aAEQ,KAAK,kBAAOR,UAAU,EAAI,CAACS,SAAS,qBAAcD,CAAC,CAAC,EAAhB,iBAA0BA,CAAC,CAAC,EAA5B,OAAV,CAA+CE,OAAO,WAAI,CAAC,EAAEF,CAAH,EAAM,EAAV,CAAtD,CAArB,CAFb,EACaA,CADb,CAAR,CAIC,CANA,CAFL,cASI,aAAM,KAAK,kBAAOR,UAAU,EAAI,CAACS,SAAS,qBAAcV,KAAK,CAACO,MAAN,CAAa,EAA3B,iBAAqCP,KAAK,CAACO,MAAN,CAAa,EAAlD,OAAV,CAAoEI,OAAO,WAAIX,KAAK,CAACO,MAAN,CAAa,EAAjB,CAA3E,CAArB,CAAX,uBACI,KAAC,KAAD,CAAO,IAAP,EAAa,KAAK,CAAE,CAACK,KAAK,CAAEZ,KAAK,CAACY,KAAd,CAApB,CAA0C,IAAI,CAAE,EAAhD,EADJ,EATJ,GANJ,cAmBI,oBAAKZ,KAAK,CAACa,QAAX,EAnBJ,GAESb,KAAK,CAACa,QAFf,CADJ,CAuBH,CApCD,CAsCA,cAAed,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst IsometricBlock = props => {\n\n    const [ hoverState, setHoverState ] = useState(false);\n\n    const handleMouseEnter = (e) => {\n        setHoverState(true);\n    }\n     \n    const handleMouseLeave = () => {\n        setHoverState(false);\n    }\n\n\n    return (\n        <li \n            className=\"iso-list-item\"\n            key={props.language} \n            onMouseLeave={handleMouseLeave} \n            onMouseEnter={handleMouseEnter}\n        >\n            <div className=\"iso-block\">\n                <span></span>\n                {[...Array(props.number)].map((number, i)=>{\n                    \n                return  <span \n                                key={i}\n                                style={{...(hoverState && {transform:`translate(${i*10}px, -${i*10}px)`, opacity:`${(1+i)/10}`})}}\n                            ></span>\n                })}\n                <span style={{...(hoverState && {transform:`translate(${props.number*10}px, -${props.number*10}px)`,opacity:`${props.number/10}` })}}>\n                    <props.icon  style={{color: props.color}} size={30}/>\n                </span>\n            </div>\n            <h4>{props.language}</h4>\n        </li>\n    );\n};\n\nexport default IsometricBlock;"]},"metadata":{},"sourceType":"module"}