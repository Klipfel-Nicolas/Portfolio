{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { projects, projectList } from \"../../data/projects-data\";\nimport Project from \"./Project\";\n\nconst Projects = () => {\n  _s();\n\n  const {\n    project1,\n    project2,\n    project3\n  } = projects;\n\n  function handleScript(id, source) {\n    if (document.querySelector(`#${id}`)) {\n      document.querySelector(`#${id}`).parentNode.removeChild(document.querySelector(`#${id}`));\n    }\n\n    let script = document.createElement(\"script\");\n    script.src = source;\n    script.id = id;\n    script.async = false;\n    document.body.appendChild(script);\n  }\n\n  useEffect(() => {\n    handleScript('anime', \"./assets/anime/lib/anime.min.js\");\n    handleScript('pieces', \"./assets/pieces/dist/pieces.min.js\");\n    handleScript('mypieces', \"./assets/mypiece/pieces.js\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"projects-container js\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieces-slider\",\n      children: [/*#__PURE__*/_jsxDEV(Project, {\n        project: project1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"pieces-slider__canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"<ul class=\\\"projects-list\\\">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: projectList.projectName.map((project, i) => {\n            const id = \"id\";\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              \"data-index\": i,\n              className: \"\",\n              children: [\"li\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"green\",\n                children: [\"\\xA0 \", id.split('').map((letter, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"data-letter\": Math.floor(Math.random() * 5) + 1,\n                    children: letter\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 49\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"white\",\n                \"data-letter\": \"5\",\n                children: \"=\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"yellow\",\n                children: project.split('').map((letter, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"data-letter\": Math.floor(Math.random() * 5) + 1,\n                    children: letter\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"</ul>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"infos-project\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ infos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/Projects.js"],"names":["React","useEffect","projects","projectList","Project","Projects","project1","project2","project3","handleScript","id","source","document","querySelector","parentNode","removeChild","script","createElement","src","async","body","appendChild","projectName","map","project","i","split","letter","Math","floor","random"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\n\nimport { projects, projectList } from \"../../data/projects-data\";\nimport Project from \"./Project\";\n\n\n\n\nconst Projects = () => {\n    \n    const { project1, project2, project3} = projects;\n    \n    function handleScript (id, source){\n    \n        if(document.querySelector(`#${id}`)){\n            document.querySelector(`#${id}`).parentNode.removeChild(document.querySelector(`#${id}`));\n        }\n        let script = document.createElement(\"script\");\n        script.src = source;\n        script.id = id;\n        script.async = false\n        document.body.appendChild(script);\n    } \n\n    useEffect(() => {\n\n        handleScript('anime', \"./assets/anime/lib/anime.min.js\" )\n        handleScript('pieces', \"./assets/pieces/dist/pieces.min.js\" )\n        handleScript('mypieces', \"./assets/mypiece/pieces.js\" )\n        \n    }, []);\n   \n    \n    return (\n        <main className=\"projects-container js\">\n            <div className=\"pieces-slider\">\n                <Project project={project1} /> \n                <Project project={project2} /> \n                <Project project={project3} />\n                \n                <canvas className=\"pieces-slider__canvas\"></canvas>\n\n                <div className=\"projects-list\">                    \n                    <span className=\"handFont\">&lt;ul class=\"projects-list\"&gt;</span>\n                    <ul>\n                        {\n                            projectList.projectName.map((project, i)=>{\n                                const id = \"id\";\n                                return (\n                                    <li key={i} data-index={i} className=\"\">\n                                        li \n                                        <span className=\"green\">&nbsp; {id.split('').map((letter, i )=>{\n                                                return(\n                                                <span data-letter={Math.floor(Math.random() * 5) + 1  } key={i}>{letter}</span>\n                                                )\n                                            })}\n                                        </span>\n                                        <span className=\"white\" data-letter=\"5\">=</span>\n                                        <span className=\"yellow\">{project.split('').map((letter, i )=>{\n                                                return(\n                                                <span data-letter={Math.floor(Math.random() * 5) + 1  } key={i}>{letter}</span>\n                                                )\n                                            })}</span>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                    <span className=\"handFont\">&lt;/ul&gt;</span> \n                </div>\n            </div>\n\n            <article className=\"infos-project\">\n                <button>+ infos</button>\n            </article>          \n        </main>\n    )\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}