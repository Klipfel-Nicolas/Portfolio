{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/IsometricBlock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst IsometricBlock = props => {\n  _s();\n\n  const [hoverState, setHoverState] = useState(false);\n\n  const handleMouseEnter = e => {\n    setHoverState(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHoverState(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"iso-block\",\n    onMouseLeave: handleMouseLeave,\n    onMouseEnter: handleMouseEnter,\n    children: [[...Array(props.number)].map((number, i) => {\n      console.log(i);\n      return /*#__PURE__*/_jsxDEV(\"span\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: { ...(hoverState && {\n          transform: `translate(${props.number * 10}px, -${(props.number + 1) * 10}px)`\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(props.icon, {\n        style: {\n          color: props.color\n        },\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, props.language, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IsometricBlock, \"vHkr/NEy+niw7qWJF0MG1A4U1Ts=\");\n\n_c = IsometricBlock;\nexport default IsometricBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsometricBlock\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/IsometricBlock.js"],"names":["React","useState","IsometricBlock","props","hoverState","setHoverState","handleMouseEnter","e","handleMouseLeave","Array","number","map","i","console","log","transform","color","language"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAE5B,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMK,gBAAgB,GAAIC,CAAD,IAAO;AAC5BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIE,QAAMG,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAOF,sBACI;AAEI,IAAA,SAAS,EAAC,WAFd;AAGI,IAAA,YAAY,EAAEG,gBAHlB;AAII,IAAA,YAAY,EAAEF,gBAJlB;AAAA,eAMK,CAAC,GAAGG,KAAK,CAACN,KAAK,CAACO,MAAP,CAAT,EAAyBC,GAAzB,CAA6B,CAACD,MAAD,EAASE,CAAT,KAAa;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,0BAAQ,oBAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,cAAR;AACF,KAHA,CANL,eAUI;AAAM,MAAA,KAAK,EAAE,EAAC,IAAIR,UAAU,IAAI;AAACW,UAAAA,SAAS,EAAE,aAAYZ,KAAK,CAACO,MAAN,GAAa,EAAG,QAAO,CAACP,KAAK,CAACO,MAAN,GAAa,CAAd,IAAiB,EAAG;AAAnE,SAAlB;AAAD,OAAb;AAAA,6BACI,QAAC,KAAD,CAAO,IAAP;AAAa,QAAA,KAAK,EAAE;AAACM,UAAAA,KAAK,EAAEb,KAAK,CAACa;AAAd,SAApB;AAA0C,QAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,KACSb,KAAK,CAACc,QADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9BD;;GAAMf,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst IsometricBlock = props => {\n\n    const [ hoverState, setHoverState ] = useState(false);\n    const handleMouseEnter = (e) => {\n        setHoverState(true);\n    }\n     \n      const handleMouseLeave = () => {\n        setHoverState(false);\n      }\n\n\n    \n\n    return (\n        <li \n            key={props.language} \n            className=\"iso-block\"\n            onMouseLeave={handleMouseLeave} \n            onMouseEnter={handleMouseEnter}\n        >\n            {[...Array(props.number)].map((number, i)=>{\n                console.log(i)\n               return  <span key={i}></span>\n            })}\n            <span style={{...(hoverState && {transform:`translate(${props.number*10}px, -${(props.number+1)*10}px)`})}}>\n                <props.icon  style={{color: props.color}} size={30}/>\n            </span>\n        </li>\n    );\n};\n\nexport default IsometricBlock;"]},"metadata":{},"sourceType":"module"}