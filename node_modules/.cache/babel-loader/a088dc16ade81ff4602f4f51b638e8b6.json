{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/Mouse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n\nconst Mouse = () => {\n  _s();\n\n  useEffect(() => {\n    const cursor = document.querySelector('.cursor');\n    const mouseTxt = cursor.querySelector('span');\n    document.addEventListener('mousemove', e => {\n      cursor.setAttribute(\"style\", `top:${e.pageY - 10}px; left : ${e.pageX - 10}px;`);\n      cursor.addEventListener('click', () => {\n        cursor.classList.add('expand');\n        setTimeout(() => {\n          cursor.classList.remove(\"expand\");\n        }, 500);\n      });\n    });\n    /*\n    const handleCursor = (e) =>{                \n        cursor.style.top = e.pageY + \"px\";\n        cursor.style.left = e.pageX + \"px\";              \n    }\n    \n    const handleHover = (link) =>{\n        \n        switch (true) {\n            case link.classList.contains('hovTxt'):\n                mouseTxt.textContent = link.dataset.txt;\n                cursor.classList.add('hoveredText');\n                break;\n            \n            default:\n                cursor.classList.add('hovered');\n                break;\n        }\n        \n    }\n    const handleLeave = () =>{\n        if(cursor.classList.contains('hovered'))cursor.classList.remove('hovered');\n        if(cursor.classList.contains('hoveredText'))cursor.classList.remove('hoveredText');\n        mouseTxt.textContent = '';\n    }\n     window.addEventListener('mousemove', handleCursor);\n       \n    document.querySelectorAll('.hover').forEach(link =>{\n        \n        link.addEventListener('mouseover', ()=>{\n            if(link.classList.contains('active') || link.classList.contains('nav-active') || link.classList.contains('lang-active'))return;\n            handleHover(link);\n        } );\n        link.addEventListener('mouseleave', handleLeave);\n    \n    })*/\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cursor\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cursorText \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Mouse, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Mouse;\nexport default Mouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mouse\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/Mouse.js"],"names":["React","useEffect","Mouse","cursor","document","querySelector","mouseTxt","addEventListener","e","setAttribute","pageY","pageX","classList","add","setTimeout","remove"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGhBD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,UAAMC,QAAQ,GAAGH,MAAM,CAACE,aAAP,CAAqB,MAArB,CAAjB;AAEAD,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuCC,CAAC,IAAI;AACxCL,MAAAA,MAAM,CAACM,YAAP,CAAoB,OAApB,EAA8B,OAAMD,CAAC,CAACE,KAAF,GAAU,EAAG,cAAaF,CAAC,CAACG,KAAF,GAAU,EAAG,KAA3E;AAEAR,MAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiC,MAAI;AACjCJ,QAAAA,MAAM,CAACS,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;AACAC,QAAAA,UAAU,CAAC,MAAI;AACXX,UAAAA,MAAM,CAACS,SAAP,CAAiBG,MAAjB,CAAwB,QAAxB;AACH,SAFS,EAER,GAFQ,CAAV;AAGH,OALD;AAMH,KATD;AAUA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK,GArDQ,CAAT;AAuDA,sBAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH,CApED;;GAAMb,K;;KAAAA,K;AAsEN,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react'\n\nconst Mouse = () => {\n\n\n    useEffect(() => {\n        \n        const cursor = document.querySelector('.cursor');\n        const mouseTxt = cursor.querySelector('span');\n        \n        document.addEventListener('mousemove', e => {\n            cursor.setAttribute(\"style\", `top:${e.pageY - 10}px; left : ${e.pageX - 10}px;`);\n\n            cursor.addEventListener('click', ()=>{\n                cursor.classList.add('expand');\n                setTimeout(()=>{\n                    cursor.classList.remove(\"expand\");\n                },500);\n            })\n        })\n        /*\n        const handleCursor = (e) =>{                \n            cursor.style.top = e.pageY + \"px\";\n            cursor.style.left = e.pageX + \"px\";              \n        }\n        \n        const handleHover = (link) =>{\n            \n            switch (true) {\n                case link.classList.contains('hovTxt'):\n                    mouseTxt.textContent = link.dataset.txt;\n                    cursor.classList.add('hoveredText');\n                    break;\n                \n                default:\n                    cursor.classList.add('hovered');\n                    break;\n            }\n            \n        }\n        const handleLeave = () =>{\n            if(cursor.classList.contains('hovered'))cursor.classList.remove('hovered');\n            if(cursor.classList.contains('hoveredText'))cursor.classList.remove('hoveredText');\n            mouseTxt.textContent = '';\n        }\n\n        window.addEventListener('mousemove', handleCursor);\n           \n        document.querySelectorAll('.hover').forEach(link =>{\n            \n            link.addEventListener('mouseover', ()=>{\n                if(link.classList.contains('active') || link.classList.contains('nav-active') || link.classList.contains('lang-active'))return;\n                handleHover(link);\n            } );\n            link.addEventListener('mouseleave', handleLeave);\n        \n        })*/\n\n    })\n\n    return (\n        \n        <div className=\"cursor\">\n            <span className=\"cursorText \">\n\n            </span>\n        </div>\n      \n        \n    );\n}\n\nexport default Mouse;"]},"metadata":{},"sourceType":"module"}