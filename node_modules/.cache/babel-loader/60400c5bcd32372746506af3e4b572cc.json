{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/ThreeSkills.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\nclass ThreeSkills extends Component {\n  componentDidMount() {\n    // THREE PARAMETRES\n    let scene, camera, renderer, controls;\n    const objects = [];\n    const targets = {\n      grid: [],\n      helix: [],\n      table: [],\n      sphere: []\n    };\n    init();\n    animation();\n    onWindowResize();\n\n    function init() {\n      const felidView = 40;\n      const width = window.innerWidth / 2;\n      const height = window.innerHeight / 2;\n      const aspect = width / height;\n      const nearPlane = 0.1;\n      const farPlane = 1000;\n      const WebGloutput = document.getElementById('container');\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(felidView, aspect, nearPlane, farPlane);\n      camera.position.z = 300;\n      renderer = new CSS3DRenderer();\n      renderer.setSize(width, height);\n      renderer.domElement.style.position = 'absolute';\n      WebGloutput.appendChild(renderer.domElement); //ELEMENTS\n\n      for (let i = 0; i < table.length; i += 5) {\n        const element = document.createElement('div');\n        element.className = 'element';\n        element.style.backgroundColor = `rgba( 0, 127, 127, ${Math.random() * 0.5 + 0.25})`;\n        const number = document.createElement('div');\n        number.className = 'number';\n        number.textContent = i / 5 + 1;\n        element.appendChild(number);\n        const symbol = document.createElement('div');\n        symbol.className = 'symbol';\n        symbol.textContent = table[i];\n        element.appendChild(symbol);\n        const detail = document.createElement('div');\n        detail.className = 'detail';\n        detail.innerHTML = `${table[i + 1]} <br/> ${table[i + 2]}}`;\n        element.appendChild(detail);\n        const object = new CSS3DObject(element);\n        object.position.x = Math.random() * 400 - 200;\n        object.position.y = Math.random() * 400 - 200;\n        object.position.z = Math.random() * 400 - 200;\n        scene.add(object);\n        objects.push(object);\n      } //TABLE\n\n\n      for (let i = 0; i < table.length; i += 5) {\n        const object = new THREE.Object3D();\n        object.position.x = table[i + 3] * 140 - width; //1260\n\n        object.position.y = -table[i + 4] * 180 + height; //1000\n\n        object.position.z = 0;\n        targets.table.push(object);\n      } //SPHERE\n\n\n      function sphere() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = Math.acos(-1 + 2 * i / objects.length);\n          let theta = Math.sqrt(objects.length * Math.PI) * phi;\n          var object = new THREE.Object3D();\n          object.position.x = 800 * Math.cos(theta) * Math.sin(phi);\n          object.position.y = 800 * Math.sin(theta) * Math.sin(phi);\n          object.position.z = 800 * Math.cos(phi); //rotation object\n\n          vector.copy(object.position).multiplyScalar(2);\n          object.lookAt(vector);\n          targets.sphere.push(object);\n        }\n      }\n\n      sphere(); // HELIX\n\n      function helix() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = i * 0.739 + Math.PI;\n          const object = new THREE.Object3D();\n          object.position.x = 800 * Math.sin(phi);\n          object.position.y = -(i * 8) + 450;\n          object.position.z = 800 * Math.cos(phi + Math.PI);\n          object.scale.set(1.1, 1.1, 1.1);\n          vector.x = object.position.x * 2;\n          vector.y = object.position.y;\n          vector.z = object.position.z * 2;\n          object.lookAt(vector);\n          targets.helix.push(object);\n        }\n      }\n\n      helix(); //GRID \n\n      for (let i = 0; i < objects.Length; ++i) {\n        const object = new THREE.Object3D();\n        object.position.x = 360 * (i % 5) - 800;\n        object.position.y = -360 * ((i / 2 >> 0) % 5) + 700; // Bizare\n\n        object.position.z = -700 * (i / 25 >> 0);\n        targets.grid.push(object);\n      }\n\n      controls = new TrackballControls(camera, renderer.domElement);\n      controls.rotateSpeed = 0.5;\n      controls.minDistance = 500;\n      controls.maxDistance = 6000;\n      controls.addEventListener('change', render);\n      const gridBtn = document.getElementById('grid');\n      const tableBtn = document.getElementById('table');\n      const helixBtn = document.getElementById('helix');\n      const sphereBtn = document.getElementById('sphere');\n      gridBtn.addEventListener('click', function () {\n        transform(targets.grid, 2000);\n      }, false);\n      tableBtn.addEventListener('click', function () {\n        transform(targets.table, 2000);\n      }, false);\n      helixBtn.addEventListener('click', function () {\n        transform(targets.helix, 2000);\n      }, false);\n      sphereBtn.addEventListener('click', function () {\n        transform(targets.sphere, 2000);\n      }, false);\n    }\n\n    ;\n\n    function transform(targets, duration) {\n      TWEEN.removeAll();\n\n      for (let i = 0; i < objects.length; ++i) {\n        let object = objects[i];\n        let target = targets[i];\n        new TWEEN.Tween(object.position).to({\n          x: target.position.x,\n          y: target.position.y,\n          z: target.position.z\n        }, Math.random() * duration + duration).easing(TWEEN.Easing.Exponential.InOut).start();\n      }\n\n      new TWEEN.Tween({}).to({}, duration * 2).onUpdate(render).start();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / 2 / (window.innerHeight / 2);\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth / 2, window.innerHeight / 2);\n      render();\n    }\n\n    function animation() {\n      TWEEN.update();\n      controls.update();\n      requestAnimationFrame(animation);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"table\",\n          children: \"TABLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sphere\",\n          children: \"SPHERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"helix\",\n          children: \"HELIX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"grid\",\n          children: \"GRID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ThreeSkills;","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/ThreeSkills.js"],"names":["React","Component","THREE","ThreeSkills","componentDidMount","scene","camera","renderer","controls","objects","targets","grid","helix","table","sphere","init","animation","onWindowResize","felidView","width","window","innerWidth","height","innerHeight","aspect","nearPlane","farPlane","WebGloutput","document","getElementById","Scene","PerspectiveCamera","position","z","CSS3DRenderer","setSize","domElement","style","appendChild","i","length","element","createElement","className","backgroundColor","Math","random","number","textContent","symbol","detail","innerHTML","object","CSS3DObject","x","y","add","push","Object3D","vector","Vector3","phi","acos","theta","sqrt","PI","cos","sin","copy","multiplyScalar","lookAt","scale","set","Length","TrackballControls","rotateSpeed","minDistance","maxDistance","addEventListener","render","gridBtn","tableBtn","helixBtn","sphereBtn","transform","duration","TWEEN","removeAll","target","Tween","to","easing","Easing","Exponential","InOut","start","onUpdate","updateProjectionMatrix","update","requestAnimationFrame"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAKA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAGlCG,EAAAA,iBAAiB,GAAE;AAEjB;AACA,QAAIC,KAAJ,EAAWC,MAAX,EAAmBC,QAAnB,EAA6BC,QAA7B;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,KAAK,EAAC,EAHM;AAIZC,MAAAA,MAAM,EAAC;AAJK,KAAhB;AAMAC,IAAAA,IAAI;AACJC,IAAAA,SAAS;AACTC,IAAAA,cAAc;;AAEd,aAASF,IAAT,GAAe;AACX,YAAMG,SAAS,GAAG,EAAlB;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACC,UAAP,GAAkB,CAAhC;AACA,YAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAmB,CAAlC;AACA,YAAMC,MAAM,GAAGL,KAAK,GAAGG,MAAvB;AACA,YAAMG,SAAS,GAAG,GAAlB;AACA,YAAMC,QAAQ,GAAG,IAAjB;AACA,YAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAApB;AAEAxB,MAAAA,KAAK,GAAG,IAAIH,KAAK,CAAC4B,KAAV,EAAR;AAEAxB,MAAAA,MAAM,GAAG,IAAIJ,KAAK,CAAC6B,iBAAV,CAA6Bb,SAA7B,EAAwCM,MAAxC,EAAgDC,SAAhD,EAA2DC,QAA3D,CAAT;AACApB,MAAAA,MAAM,CAAC0B,QAAP,CAAgBC,CAAhB,GAAoB,GAApB;AAED1B,MAAAA,QAAQ,GAAG,IAAI2B,aAAJ,EAAX;AACC3B,MAAAA,QAAQ,CAAC4B,OAAT,CAAkBhB,KAAlB,EAAyBG,MAAzB;AACAf,MAAAA,QAAQ,CAAC6B,UAAT,CAAoBC,KAApB,CAA0BL,QAA1B,GAAqC,UAArC;AACAL,MAAAA,WAAW,CAACW,WAAZ,CAAyB/B,QAAQ,CAAC6B,UAAlC,EAjBW,CAmBf;;AAGI,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG1B,KAAK,CAAC2B,MAAxB,EAAgCD,CAAC,IAAG,CAApC,EAAwC;AACpC,cAAME,OAAO,GAAGb,QAAQ,CAACc,aAAT,CAAuB,KAAvB,CAAhB;AACAD,QAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,QAAAA,OAAO,CAACJ,KAAR,CAAcO,eAAd,GAAiC,sBAAsBC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,IAAK,GAAlF;AAEA,cAAMC,MAAM,GAAGnB,QAAQ,CAACc,aAAT,CAAuB,KAAvB,CAAf;AACAK,QAAAA,MAAM,CAACJ,SAAP,GAAmB,QAAnB;AACAI,QAAAA,MAAM,CAACC,WAAP,GAAqBT,CAAC,GAAG,CAAJ,GAAQ,CAA7B;AACAE,QAAAA,OAAO,CAACH,WAAR,CAAoBS,MAApB;AAEA,cAAME,MAAM,GAAGrB,QAAQ,CAACc,aAAT,CAAuB,KAAvB,CAAf;AACAO,QAAAA,MAAM,CAACN,SAAP,GAAmB,QAAnB;AACAM,QAAAA,MAAM,CAACD,WAAP,GAAqBnC,KAAK,CAAE0B,CAAF,CAA1B;AACAE,QAAAA,OAAO,CAACH,WAAR,CAAoBW,MAApB;AAEA,cAAMC,MAAM,GAAGtB,QAAQ,CAACc,aAAT,CAAuB,KAAvB,CAAf;AACAQ,QAAAA,MAAM,CAACP,SAAP,GAAmB,QAAnB;AACAO,QAAAA,MAAM,CAACC,SAAP,GAAoB,GAAGtC,KAAK,CAAE0B,CAAC,GAAC,CAAJ,CAAQ,UAAU1B,KAAK,CAAE0B,CAAC,GAAC,CAAJ,CAAQ,GAA3D;AACAE,QAAAA,OAAO,CAACH,WAAR,CAAoBY,MAApB;AAEA,cAAME,MAAM,GAAG,IAAIC,WAAJ,CAAiBZ,OAAjB,CAAf;AACAW,QAAAA,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAoBT,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA1C;AACAM,QAAAA,MAAM,CAACpB,QAAP,CAAgBuB,CAAhB,GAAoBV,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA1C;AACAM,QAAAA,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoBY,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA1C;AAGAzC,QAAAA,KAAK,CAACmD,GAAN,CAAUJ,MAAV;AACA3C,QAAAA,OAAO,CAACgD,IAAR,CAAcL,MAAd;AACH,OAlDU,CAoDnB;;;AAEY,WAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC1B,KAAK,CAAC2B,MAAxB,EAAgCD,CAAC,IAAG,CAApC,EAAsC;AAClC,cAAMa,MAAM,GAAG,IAAIlD,KAAK,CAACwD,QAAV,EAAf;AAEAN,QAAAA,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAoBzC,KAAK,CAAC0B,CAAC,GAAG,CAAL,CAAL,GAAe,GAAf,GAAqBpB,KAAzC,CAHkC,CAGc;;AAChDiC,QAAAA,MAAM,CAACpB,QAAP,CAAgBuB,CAAhB,GAAoB,CAAC1C,KAAK,CAAC0B,CAAC,GAAG,CAAL,CAAN,GAAgB,GAAhB,GAAsBjB,MAA1C,CAJkC,CAIgB;;AAClD8B,QAAAA,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AAEAvB,QAAAA,OAAO,CAACG,KAAR,CAAc4C,IAAd,CAAmBL,MAAnB;AACH,OA9DM,CAiEnB;;;AACQ,eAAStC,MAAT,GAAiB;AACb,cAAM6C,MAAM,GAAG,IAAIzD,KAAK,CAAC0D,OAAV,EAAf;;AAEA,aAAK,IAAIrB,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAE9B,OAAO,CAAC+B,MAA1B,EAAkC,EAAED,CAApC,EAAsC;AAClC,cAAIsB,GAAG,GAAGhB,IAAI,CAACiB,IAAL,CAAU,CAAC,CAAD,GAAO,IAAIvB,CAAN,GAAW9B,OAAO,CAAC+B,MAAlC,CAAV;AACA,cAAIuB,KAAK,GAAGlB,IAAI,CAACmB,IAAL,CAAWvD,OAAO,CAAC+B,MAAR,GAAiBK,IAAI,CAACoB,EAAjC,IAAwCJ,GAApD;AACA,cAAIT,MAAM,GAAG,IAAIlD,KAAK,CAACwD,QAAV,EAAb;AAEAN,UAAAA,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAoB,MAAMT,IAAI,CAACqB,GAAL,CAAUH,KAAV,CAAN,GAA0BlB,IAAI,CAACsB,GAAL,CAAUN,GAAV,CAA9C;AACAT,UAAAA,MAAM,CAACpB,QAAP,CAAgBuB,CAAhB,GAAoB,MAAMV,IAAI,CAACsB,GAAL,CAAUJ,KAAV,CAAN,GAA0BlB,IAAI,CAACsB,GAAL,CAAUN,GAAV,CAA9C;AACAT,UAAAA,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoB,MAAMY,IAAI,CAACqB,GAAL,CAAUL,GAAV,CAA1B,CAPkC,CASlC;;AAEAF,UAAAA,MAAM,CAACS,IAAP,CAAahB,MAAM,CAACpB,QAApB,EAA+BqC,cAA/B,CAA8C,CAA9C;AACAjB,UAAAA,MAAM,CAACkB,MAAP,CAAeX,MAAf;AACAjD,UAAAA,OAAO,CAACI,MAAR,CAAe2C,IAAf,CAAqBL,MAArB;AACH;AACJ;;AACDtC,MAAAA,MAAM,GArFK,CAsFnB;;AACQ,eAASF,KAAT,GAAgB;AACZ,cAAM+C,MAAM,GAAG,IAAIzD,KAAK,CAAC0D,OAAV,EAAf;;AAEA,aAAI,IAAIrB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC9B,OAAO,CAAC+B,MAAvB,EAA+B,EAAED,CAAjC,EAAmC;AAE/B,cAAIsB,GAAG,GAAGtB,CAAC,GAAG,KAAJ,GAAYM,IAAI,CAACoB,EAA3B;AACA,gBAAMb,MAAM,GAAG,IAAIlD,KAAK,CAACwD,QAAV,EAAf;AACAN,UAAAA,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAoB,MAAOT,IAAI,CAACsB,GAAL,CAAUN,GAAV,CAA3B;AACAT,UAAAA,MAAM,CAACpB,QAAP,CAAgBuB,CAAhB,GAAoB,EAAGhB,CAAC,GAAG,CAAP,IAAa,GAAjC;AACAa,UAAAA,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoB,MAAOY,IAAI,CAACqB,GAAL,CAAUL,GAAG,GAAGhB,IAAI,CAACoB,EAArB,CAA3B;AAEAb,UAAAA,MAAM,CAACmB,KAAP,CAAaC,GAAb,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B;AAEAb,UAAAA,MAAM,CAACL,CAAP,GAAWF,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAoB,CAA/B;AACAK,UAAAA,MAAM,CAACJ,CAAP,GAAWH,MAAM,CAACpB,QAAP,CAAgBuB,CAA3B;AACAI,UAAAA,MAAM,CAAC1B,CAAP,GAAWmB,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoB,CAA/B;AAEAmB,UAAAA,MAAM,CAACkB,MAAP,CAAeX,MAAf;AACAjD,UAAAA,OAAO,CAACE,KAAR,CAAc6C,IAAd,CAAoBL,MAApB;AAEH;AACJ;;AAEDxC,MAAAA,KAAK,GA9GM,CA+GnB;;AAEY,WAAK,IAAI2B,CAAC,GAAE,CAAZ,EAAgBA,CAAC,GAAG9B,OAAO,CAACgE,MAA5B,EAAoC,EAAElC,CAAtC,EAA0C;AAEtC,cAAMa,MAAM,GAAG,IAAIlD,KAAK,CAACwD,QAAV,EAAf;AAEAN,QAAAA,MAAM,CAACpB,QAAP,CAAgBsB,CAAhB,GAAqB,OAASf,CAAC,GAAK,CAAf,IAAoB,GAAzC;AACAa,QAAAA,MAAM,CAACpB,QAAP,CAAgBuB,CAAhB,GAAoB,CAAC,GAAD,IAAU,CAAEhB,CAAC,GAAI,CAAL,IAAU,CAAZ,IAAkB,CAA5B,IAAkC,GAAtD,CALsC,CAKqB;;AAC3Da,QAAAA,MAAM,CAACpB,QAAP,CAAgBC,CAAhB,GAAoB,CAAC,GAAD,IAAUM,CAAC,GAAK,EAAN,IAAY,CAAtB,CAApB;AAEA7B,QAAAA,OAAO,CAACC,IAAR,CAAa8C,IAAb,CAAmBL,MAAnB;AAEH;;AAGD5C,MAAAA,QAAQ,GAAG,IAAIkE,iBAAJ,CAAuBpE,MAAvB,EAA+BC,QAAQ,CAAC6B,UAAxC,CAAX;AACR5B,MAAAA,QAAQ,CAACmE,WAAT,GAAuB,GAAvB;AACAnE,MAAAA,QAAQ,CAACoE,WAAT,GAAuB,GAAvB;AACApE,MAAAA,QAAQ,CAACqE,WAAT,GAAuB,IAAvB;AACArE,MAAAA,QAAQ,CAACsE,gBAAT,CAA2B,QAA3B,EAAqCC,MAArC;AAEI,YAAMC,OAAO,GAAGpD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;AACA,YAAMoD,QAAQ,GAAGrD,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB;AACA,YAAMqD,QAAQ,GAAGtD,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB;AACA,YAAMsD,SAAS,GAAGvD,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AAGAmD,MAAAA,OAAO,CAACF,gBAAR,CAAyB,OAAzB,EAAkC,YAAW;AAAEM,QAAAA,SAAS,CAAE1E,OAAO,CAACC,IAAV,EAAgB,IAAhB,CAAT;AAAgC,OAA/E,EAAiF,KAAjF;AACAsE,MAAAA,QAAQ,CAACH,gBAAT,CAA0B,OAA1B,EAAmC,YAAW;AAAEM,QAAAA,SAAS,CAAE1E,OAAO,CAACG,KAAV,EAAiB,IAAjB,CAAT;AAAkC,OAAlF,EAAoF,KAApF;AACAqE,MAAAA,QAAQ,CAACJ,gBAAT,CAA0B,OAA1B,EAAmC,YAAW;AAAEM,QAAAA,SAAS,CAAE1E,OAAO,CAACE,KAAV,EAAiB,IAAjB,CAAT;AAAkC,OAAlF,EAAoF,KAApF;AACAuE,MAAAA,SAAS,CAACL,gBAAV,CAA2B,OAA3B,EAAoC,YAAW;AAAEM,QAAAA,SAAS,CAAE1E,OAAO,CAACI,MAAV,EAAkB,IAAlB,CAAT;AAAmC,OAApF,EAAsF,KAAtF;AACH;;AAAA;;AAED,aAASsE,SAAT,CAAoB1E,OAApB,EAA6B2E,QAA7B,EAAsC;AAClCC,MAAAA,KAAK,CAACC,SAAN;;AAEA,WAAI,IAAIhD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE9B,OAAO,CAAC+B,MAA1B,EAAkC,EAAED,CAApC,EAAsC;AAClC,YAAIa,MAAM,GAAG3C,OAAO,CAAC8B,CAAD,CAApB;AACA,YAAIiD,MAAM,GAAG9E,OAAO,CAAC6B,CAAD,CAApB;AAEA,YAAI+C,KAAK,CAACG,KAAV,CAAgBrC,MAAM,CAACpB,QAAvB,EACC0D,EADD,CACI;AAAEpC,UAAAA,CAAC,EAAEkC,MAAM,CAACxD,QAAP,CAAgBsB,CAArB;AAAwBC,UAAAA,CAAC,EAAEiC,MAAM,CAACxD,QAAP,CAAgBuB,CAA3C;AAA8CtB,UAAAA,CAAC,EAAEuD,MAAM,CAACxD,QAAP,CAAgBC;AAAjE,SADJ,EACyEY,IAAI,CAACC,MAAL,KAAgBuC,QAAhB,GAA2BA,QADpG,EAECM,MAFD,CAESL,KAAK,CAACM,MAAN,CAAaC,WAAb,CAAyBC,KAFlC,EAGCC,KAHD;AAIH;;AACD,UAAIT,KAAK,CAACG,KAAV,CAAgB,EAAhB,EACCC,EADD,CACI,EADJ,EACQL,QAAQ,GAAG,CADnB,EAECW,QAFD,CAEWjB,MAFX,EAGCgB,KAHD;AAIH;;AAED,aAAShB,MAAT,GAAkB;AAEdxE,MAAAA,QAAQ,CAACwE,MAAT,CAAiB1E,KAAjB,EAAwBC,MAAxB;AAEH;;AAED,aAASW,cAAT,GAAyB;AACrBX,MAAAA,MAAM,CAACkB,MAAP,GAAiBJ,MAAM,CAACC,UAAP,GAAoB,CAArB,IAA4BD,MAAM,CAACG,WAAP,GAAqB,CAAjD,CAAhB;AACAjB,MAAAA,MAAM,CAAC2F,sBAAP;AAEA1F,MAAAA,QAAQ,CAAC4B,OAAT,CAAmBf,MAAM,CAACC,UAAP,GAAkB,CAArC,EAA0CD,MAAM,CAACG,WAAP,GAAmB,CAA7D;AACAwD,MAAAA,MAAM;AACT;;AAGD,aAAS/D,SAAT,GAAoB;AAChBsE,MAAAA,KAAK,CAACY,MAAN;AACA1F,MAAAA,QAAQ,CAAC0F,MAAT;AACAC,MAAAA,qBAAqB,CAAEnF,SAAF,CAArB;AACH;AAGJ;;AAGC+D,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,6BAEU;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzNiC;;AA4NpC,eAAe5E,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\n\n\n\nclass ThreeSkills extends Component {\n  \n\n  componentDidMount(){\n        \n    // THREE PARAMETRES\n    let scene, camera, renderer, controls;\n    const objects = [];\n    const targets = {\n        grid: [],\n        helix: [],\n        table:[],\n        sphere:[]\n    };\n    init();\n    animation();\n    onWindowResize()\n\n    function init(){\n        const felidView = 40;\n        const width = window.innerWidth/2;\n        const height = window.innerHeight/2;\n        const aspect = width / height;\n        const nearPlane = 0.1;\n        const farPlane = 1000;\n        const WebGloutput = document.getElementById('container');\n\n        scene = new THREE.Scene();\n        \n        camera = new THREE.PerspectiveCamera( felidView, aspect, nearPlane, farPlane);\n        camera.position.z = 300;\n\n       renderer = new CSS3DRenderer();\n        renderer.setSize( width, height);\n        renderer.domElement.style.position = 'absolute';\n        WebGloutput.appendChild( renderer.domElement);\n   \n    //ELEMENTS\n    \n    \n        for( let i=0; i < table.length; i +=5 ) {\n            const element = document.createElement('div');\n            element.className = 'element';\n            element.style.backgroundColor = `rgba( 0, 127, 127, ${ Math.random() * 0.5 + 0.25})`;\n\n            const number = document.createElement('div');\n            number.className = 'number';\n            number.textContent = i / 5 + 1;\n            element.appendChild(number);\n\n            const symbol = document.createElement('div');\n            symbol.className = 'symbol';\n            symbol.textContent = table[ i ];\n            element.appendChild(symbol);\n\n            const detail = document.createElement('div');\n            detail.className = 'detail';\n            detail.innerHTML = `${ table[ i+1 ]} <br/> ${ table[ i+2 ]}}`;\n            element.appendChild(detail);\n\n            const object = new CSS3DObject( element );\n            object.position.x = Math.random() * 400 - 200 ;\n            object.position.y = Math.random() * 400 - 200 ;\n            object.position.z = Math.random() * 400 - 200 ;\n\n            \n            scene.add(object);\n            objects.push( object );\n        } \n\n//TABLE\n        \n            for (let i = 0; i<table.length; i +=5){\n                const object = new THREE.Object3D();\n\n                object.position.x = table[i + 3] * 140 - width; //1260\n                object.position.y = -table[i + 4] * 180 + height; //1000\n                object.position.z = 0;\n\n                targets.table.push(object);\n            }\n        \n\n//SPHERE\n        function sphere(){\n            const vector = new THREE.Vector3();\n\n            for (let i =0; i< objects.length; ++i){\n                let phi = Math.acos(-1 + ( 2 * i )/ objects.length);\n                let theta = Math.sqrt( objects.length * Math.PI ) * phi;\n                var object = new THREE.Object3D();\n\n                object.position.x = 800 * Math.cos( theta ) * Math.sin( phi );\n                object.position.y = 800 * Math.sin( theta ) * Math.sin( phi ); \n                object.position.z = 800 * Math.cos( phi );\n\n                //rotation object\n\n                vector.copy( object.position ).multiplyScalar(2);\n                object.lookAt( vector );\n                targets.sphere.push( object );\n            }\n        }\n        sphere()\n// HELIX\n        function helix(){\n            const vector = new THREE.Vector3();\n\n            for(let i=0; i<objects.length; ++i){\n\n                let phi = i * 0.739 + Math.PI;\n                const object = new THREE.Object3D();\n                object.position.x = 800  * Math.sin( phi );\n                object.position.y = -( i * 8 ) + 450;\n                object.position.z = 800  * Math.cos( phi + Math.PI );\n        \n                object.scale.set( 1.1, 1.1, 1.1 );\n        \n                vector.x = object.position.x * 2;\n                vector.y = object.position.y;\n                vector.z = object.position.z * 2;\n        \n                object.lookAt( vector );\n                targets.helix.push( object );\n\n            }\n        }\n        \n        helix()\n//GRID \n        \n            for (let i =0 ; i < objects.Length; ++i ) {\n\n                const object = new THREE.Object3D();\n        \n                object.position.x =  360  * ( i   % 5) - 800;\n                object.position.y = -360  * ( ( i /  2 >> 0 ) % 5 ) + 700; // Bizare\n                object.position.z = -700  * ( i   / 25 >> 0 );\n        \n                targets.grid.push( object );\n                \n            }\n\n\n            controls = new TrackballControls( camera, renderer.domElement );\n    controls.rotateSpeed = 0.5;\n    controls.minDistance = 500;\n    controls.maxDistance = 6000;\n    controls.addEventListener( 'change', render );\n\n        const gridBtn = document.getElementById('grid');\n        const tableBtn = document.getElementById('table');\n        const helixBtn = document.getElementById('helix');\n        const sphereBtn = document.getElementById('sphere');\n\n        \n        gridBtn.addEventListener('click', function() { transform( targets.grid, 2000 )}, false );\n        tableBtn.addEventListener('click', function() { transform( targets.table, 2000 ) }, false );\n        helixBtn.addEventListener('click', function() { transform( targets.helix, 2000 ) }, false );\n        sphereBtn.addEventListener('click', function() { transform( targets.sphere, 2000 ) }, false );\n    };\n    \n    function transform( targets, duration){\n        TWEEN.removeAll();\n\n        for(let i = 0; i< objects.length; ++i){\n            let object = objects[i];\n            let target = targets[i];\n\n            new TWEEN.Tween(object.position)\n            .to({ x: target.position.x, y: target.position.y, z: target.position.z}, Math.random() * duration + duration)\n            .easing( TWEEN.Easing.Exponential.InOut )\n            .start();\n        }\n        new TWEEN.Tween({})\n        .to({}, duration * 2)\n        .onUpdate( render )\n        .start();\n    }\n\n    function render() {\n\n        renderer.render( scene, camera );\n\n    }\n\n    function onWindowResize(){\n        camera.aspect = (window.innerWidth / 2 ) / (window.innerHeight / 2 );\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( (window.innerWidth/2), (window.innerHeight/2));\n        render();\n    }\n    \n\n    function animation(){\n        TWEEN.update();\n        controls.update();\n        requestAnimationFrame( animation );\n    }\n\n\n}\n\n  \n  render() {\n    return (\n      <div id=\"container\">\n    \t     \n                <div id=\"menu\">\n                    <button id=\"table\">TABLE</button>\n                    <button id=\"sphere\">SPHERE</button>\n                    <button id=\"helix\">HELIX</button>\n                    <button id=\"grid\">GRID</button>\n                </div>\n            </div>\n    )\n  }\n}\n\nexport default ThreeSkills;\n"]},"metadata":{},"sourceType":"module"}