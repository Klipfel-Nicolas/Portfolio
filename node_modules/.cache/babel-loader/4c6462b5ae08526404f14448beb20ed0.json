{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/projects/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { projects, projectList } from \"../../data/projects-data\";\nimport Project from \"./Project\";\nimport ProjectInfos from './ProjectInfos';\n\nconst Projects = () => {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const {\n    project0,\n    project1,\n    project2\n  } = projects;\n\n  const infosTrigger = () => {\n    //index project\n    const currentIndex = document.querySelector('.projects-list .active').dataset.index;\n    setIndex(currentIndex);\n    console.log(index);\n    const infosDiv = document.querySelector('.infos-project');\n    const listProject = document.querySelector('.projects-list ul');\n    const btnInfos = document.querySelector('.btn-info');\n    infosDiv.classList.toggle('active');\n    btnInfos.classList.toggle('active'); //Remove active btn and div infos\n\n    listProject.addEventListener('click', () => infosDiv.classList.remove('active'));\n    window.addEventListener('keydown', () => infosDiv.classList.remove('active'));\n    window.addEventListener('wheel', () => infosDiv.classList.remove('active'));\n    listProject.addEventListener('click', () => btnInfos.classList.remove('active'));\n    window.addEventListener('keydown', () => btnInfos.classList.remove('active'));\n    window.addEventListener('wheel', () => btnInfos.classList.remove('active'));\n  };\n\n  function handleScript(id, source) {\n    if (document.querySelector(`#${id}`)) {\n      document.querySelector(`#${id}`).parentNode.removeChild(document.querySelector(`#${id}`));\n    }\n\n    let script = document.createElement(\"script\");\n    script.src = source;\n    script.id = id;\n    script.async = false;\n    document.body.appendChild(script);\n  }\n\n  useEffect(() => {\n    handleScript('tilt', \"./scripts/tilt/vanilla-tilt.js\");\n    handleScript('anime', \"./scripts/anime/lib/anime.min.js\");\n    handleScript('pieces', \"./scripts/pieces/dist/pieces.min.js\");\n    handleScript('mypieces', \"./scripts/mypiece/pieces.js\");\n  }, []);\n  /*\n  {Object.entries(projects).map((project, i)=>{\n                                  if(i === index){\n                                      \n                                      return <ProjectInfos project={project1} key={i}/>   \n                                  } \n                                  return null;                              \n                              })}\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"projects-container js\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieces-slider\",\n      children: [/*#__PURE__*/_jsxDEV(Project, {\n        project: project0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"pieces-slider__canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"<ul class=\\\"projects-list\\\">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: projectList.projectName.map((project, i) => {\n            const id = \"id\";\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              \"data-index\": i,\n              className: \"hover\",\n              children: [\"li\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"green\",\n                children: [\"\\xA0 \", id.split('').map((letter, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"data-letter\": Math.floor(Math.random() * 5) + 1,\n                    children: letter\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"white\",\n                \"data-letter\": \"5\",\n                children: \"=\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"yellow\",\n                children: project.split('').map((letter, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"data-letter\": Math.floor(Math.random() * 5) + 1,\n                    children: letter\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"</ul>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"infos-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infos-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"<button>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-info hover\",\n          onClick: () => infosTrigger(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"handFont\",\n          children: \"</button>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infos-card\"\n          /*data-tilt \n          data-tilt-max=\"25\" \n          data-tilt-speed=\"400\" \n          data-tilt-glare = \"true\"\n          data-tilt-max-glare=\"0.5\"*/\n          ,\n          children: Object.entries(projects).map((project, i) => {\n            if (i === index) {\n              return /*#__PURE__*/_jsxDEV(ProjectInfos, {\n                project: project[1]\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this);\n            }\n\n            return console.log('fuck');\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"c3fuAdVwNN91t4bNS1qBXl5hAWY=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/Git Pro/Portfolio/src/components/projects/Projects.js"],"names":["React","useEffect","useState","projects","projectList","Project","ProjectInfos","Projects","index","setIndex","project0","project1","project2","infosTrigger","currentIndex","document","querySelector","dataset","console","log","infosDiv","listProject","btnInfos","classList","toggle","addEventListener","remove","window","handleScript","id","source","parentNode","removeChild","script","createElement","src","async","body","appendChild","projectName","map","project","i","split","letter","Math","floor","random","Object","entries"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport { projects, projectList } from \"../../data/projects-data\";\nimport Project from \"./Project\";\nimport ProjectInfos from './ProjectInfos';\n\n\nconst Projects = () => {\n\n    const [index, setIndex] = useState(0)\n    \n    const { project0, project1, project2} = projects;\n\n    const infosTrigger = ()=>{\n        //index project\n        const currentIndex = document.querySelector('.projects-list .active').dataset.index;\n        setIndex(currentIndex);\nconsole.log(index)\n        const infosDiv = document.querySelector('.infos-project');\n        const listProject = document.querySelector('.projects-list ul');\n        const btnInfos = document.querySelector('.btn-info');\n        \n        \n        infosDiv.classList.toggle('active');\n        btnInfos.classList.toggle('active');\n        //Remove active btn and div infos\n        listProject.addEventListener('click', ()=> infosDiv.classList.remove('active'));\n        window.addEventListener('keydown', ()=> infosDiv.classList.remove('active'));\n        window.addEventListener('wheel', ()=> infosDiv.classList.remove('active'));\n        listProject.addEventListener('click', ()=> btnInfos.classList.remove('active'));\n        window.addEventListener('keydown', ()=> btnInfos.classList.remove('active'));\n        window.addEventListener('wheel', ()=> btnInfos.classList.remove('active'));\n\n    }\n\n    function handleScript (id, source){\n    \n        if(document.querySelector(`#${id}`)){\n            document.querySelector(`#${id}`).parentNode.removeChild(document.querySelector(`#${id}`));\n        }\n        let script = document.createElement(\"script\");\n        script.src = source;\n        script.id = id;\n        script.async = false\n        document.body.appendChild(script);\n    } \n\n    useEffect(() => {\n        handleScript('tilt', \"./scripts/tilt/vanilla-tilt.js\");\n        handleScript('anime', \"./scripts/anime/lib/anime.min.js\" )\n        handleScript('pieces', \"./scripts/pieces/dist/pieces.min.js\" )\n        handleScript('mypieces', \"./scripts/mypiece/pieces.js\" )        \n    }, []);    \n   \n    /*\n    {Object.entries(projects).map((project, i)=>{\n                                    if(i === index){\n                                        \n                                        return <ProjectInfos project={project1} key={i}/>   \n                                    } \n                                    return null;                              \n                                })}\n    */\n    \n    return (\n        <main className=\"projects-container js\">\n            <div className=\"pieces-slider\">\n                <Project project={project0} /> \n                <Project project={project1} /> \n                <Project project={project2} />\n                \n                <canvas className=\"pieces-slider__canvas\"></canvas>\n\n                <div className=\"projects-list\">                    \n                    <span className=\"handFont\">&lt;ul class=\"projects-list\"&gt;</span>\n                    <ul>\n                        {\n                            projectList.projectName.map((project, i)=>{\n                                const id = \"id\";\n                                return (\n                                    <li key={i} data-index={i} className=\"hover\">\n                                        li \n                                        <span className=\"green\">&nbsp; {id.split('').map((letter, i )=>{\n                                                return(\n                                                <span data-letter={Math.floor(Math.random() * 5) + 1  } key={i}>{letter}</span>\n                                                )\n                                            })}\n                                        </span>\n                                        <span className=\"white\" data-letter=\"5\">=</span>\n                                        <span className=\"yellow\">{project.split('').map((letter, i )=>{\n                                                return(\n                                                <span data-letter={Math.floor(Math.random() * 5) + 1  } key={i}>{letter}</span>\n                                                )\n                                            })}</span>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                    <span className=\"handFont\">&lt;/ul&gt;</span> \n                </div>\n            </div>\n\n\n            <article className=\"infos-project\">\n                \n                <div className=\"infos-btn\">\n                    <span className=\"handFont\">&lt;button&gt;</span>\n                    <button\n                        className='btn-info hover'\n                        onClick= {()=>infosTrigger()}       \n                    >\n                    <span> </span>   \n                    </button> \n                    <span className=\"handFont\">&lt;/button&gt;</span>\n                </div>\n                \n                    <div className=\"card-container\">\n                        <div \n                            className=\"infos-card\" \n                            /*data-tilt \n                            data-tilt-max=\"25\" \n                            data-tilt-speed=\"400\" \n                            data-tilt-glare = \"true\"\n                            data-tilt-max-glare=\"0.5\"*/\n                        >         \n                            {Object.entries(projects).map((project, i)=>{\n                                    \n                                    if(i === index){\n                                       return( \n                                        <ProjectInfos project={project[1]} key={i}/> \n                                       )   \n                                    }\n                                    return console.log('fuck');                              \n                                })}\n                        </div>\n                    </div>    \n            </article>          \n        </main>\n    )\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}