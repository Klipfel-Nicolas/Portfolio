{"ast":null,"code":"console.log('tarba de ta race');\nlet sliderCanvas = document.querySelector('.pieces-slider__canvas');\nlet imagesEl = [].slice.call(document.querySelectorAll('.pieces-slider__image'));\nlet textEl = [].slice.call(document.querySelectorAll('.pieces-slider__text'));\nlet slidesLength = imagesEl.length; // Define indexes related variables, as we will use indexes to reference items\n\nlet currentIndex = 0,\n    currentImageIndex,\n    currentTextIndex,\n    currentNumberIndex;\nlet textIndexes = [];\nlet numberIndexes = []; // Update current indexes for image, text and number\n\nfunction updateIndexes() {\n  currentImageIndex = currentIndex * 3;\n  currentTextIndex = currentImageIndex + 1;\n  currentNumberIndex = currentImageIndex + 2;\n}\n\nupdateIndexes(); // Options for images\n\nlet imageOption = {\n  angle: 45,\n  // rotate item pieces 45deg\n  exraSpacing: {\n    extraX: 100,\n    extraY: 200\n  },\n  // this extra spacing is needed to cover all the item, because angle != 0\n  pieceWidth: function () {\n    return Pieces.random(50, 200);\n  },\n  // every piece will have a random width between 50px and 200px\n  ty: function () {\n    return Pieces.random(-400, 400);\n  } // every piece will be translated in the Y axis a random distance between -400px and 400px\n\n}; // Options for texts\n\nlet textOptions = {\n  color: 'white',\n  backgroundColor: '#0066CC',\n  fontSize: function () {\n    return windowWidth > 720 ? 50 : 30;\n  },\n  padding: '15 20 10 20',\n  angle: -45,\n  extraSpacing: {\n    extraX: 0,\n    extraY: 300\n  },\n  piecesWidth: function () {\n    return Pieces.random(50, 200);\n  },\n  ty: function () {\n    return Pieces.random(-200, 200);\n  },\n  translate: function () {\n    if (windowWidth > 1120) return {\n      translateX: 200,\n      translateY: 200\n    };\n    if (windowWidth > 720) return {\n      translateX: 0,\n      translateY: 200\n    };\n    return {\n      translateX: 0,\n      translateY: 100\n    };\n  }\n};\nlet numberOptions = {\n  color: 'white',\n  backgroundColor: '#0066CC',\n  backgroundRadius: 300,\n  fontSize: function () {\n    return windowWidth > 720 ? 100 : 50;\n  },\n  padding: function () {\n    return windowWidth > 720 ? '18 35 10 38' : '18 25 10 28';\n  },\n  angle: 0,\n  piecesSpacing: 2,\n  extraSpacing: {\n    extraX: 10,\n    extraY: 10\n  },\n  piecesWidth: 35,\n  ty: function () {\n    return Pieces.random(-200, 200);\n  },\n  translate: function () {\n    if (windowWidth > 1120) return {\n      translateX: -340,\n      translateY: -180\n    };\n    if (windowWidth > 720) return {\n      translateX: -240,\n      translateY: -180\n    };\n    return {\n      translateX: -140,\n      translateY: -100\n    };\n  }\n};\nlet items = [];\nlet imagesReady = 0;\n\nfor (let i = 0; i < slidesLength; i++) {\n  // Wait for all images to load before initializing the slider and event listeners\n  let slideImage = new Image();\n\n  slideImage.onload = function () {\n    if (++imagesReady == slidesLength) {\n      initSlider();\n      initEvents();\n    }\n  }; // Push all elements for each slide with the corresponding options\n\n\n  items.push({\n    type: 'image',\n    value: imagesEl[i],\n    options: imageOptions\n  });\n  items.push({\n    type: 'text',\n    value: textEl[i].innerText,\n    options: textOptions\n  });\n  items.push({\n    type: 'text',\n    value: i + 1,\n    options: numberOptions\n  }); // Save indexes\n\n  textIndexes.push(i * 3 + 1);\n  numberIndexes.push(i * 3 + 2); // Set image src\n\n  slideImage.src = imagesEl[i].src;\n}\n\n;\nconsole.log(sliderCanvas); // Save the new Pieces instance\n\npiecesSlider = new Pieces({\n  canvas: sliderCanvas,\n  // CSS selector to get the canvas\n  items: items,\n  // the Array of items we've built before\n  x: 'centerAll',\n  // center all items in the X axis\n  y: 'centerAll',\n  // center all items in the Y axis\n  piecesSpacing: 1,\n  // default spacing between pieces\n  fontFamily: [\"'Helvetica Neue', sans-serif\"],\n  animation: {\n    // animation options to use in any operation\n    duration: function () {\n      return Pieces.random(1000, 2000);\n    },\n    easing: 'easeOutQuint'\n  },\n  debug: false // set `debug: true` to enable debug mode\n\n}); // Animate all numbers to rotate clockwise indefinitely\n\npiecesSlider.animateItems({\n  items: numberIndexes,\n  duration: 20000,\n  angle: 360,\n  loop: true\n}); // Show current items: image, text and number\n\nshowItems(); // Show current items: image, text and number\n\nfunction showItems() {\n  // Show image pieces\n  piecesSlider.showPieces({\n    items: currentImageIndex,\n    ignore: ['tx'],\n    singly: true,\n    update: anim => {\n      // Stop the pieces animation at 60%, and run a new indefinitely animation of `ty` for each piece\n      if (anim.progress > 60) {\n        let piece = anim.animatables[0].target;\n        let ty = piece.ty;\n        anime.remove(piece);\n        anime({\n          targets: piece,\n          ty: piece.h_ty < 300 ? [{\n            value: ty + 10,\n            duration: 1000\n          }, {\n            value: ty - 10,\n            duration: 2000\n          }, {\n            value: ty,\n            duration: 1000\n          }] : [{\n            value: ty - 10,\n            duration: 1000\n          }, {\n            value: ty + 10,\n            duration: 2000\n          }, {\n            value: ty,\n            duration: 1000\n          }],\n          duration: 2000,\n          easing: 'linear',\n          loop: true\n        });\n      }\n    }\n  }); // Show pieces for text and number, using alternate `ty` values\n\n  piecesSlider.showPieces({\n    items: currentTextIndex\n  });\n  piecesSlider.showPieces({\n    items: currentNumberIndex,\n    ty: function (p, i) {\n      return p.s_ty - [-3, 3][i % 2];\n    }\n  });\n} // Hide current items: image, text and number\n\n\nfunction hideItems() {\n  piecesSlider.hidePieces({\n    items: [currentImageIndex, currentTextIndex, currentNumberIndex]\n  });\n}","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/script/pieces.js"],"names":["console","log","sliderCanvas","document","querySelector","imagesEl","slice","call","querySelectorAll","textEl","slidesLength","length","currentIndex","currentImageIndex","currentTextIndex","currentNumberIndex","textIndexes","numberIndexes","updateIndexes","imageOption","angle","exraSpacing","extraX","extraY","pieceWidth","Pieces","random","ty","textOptions","color","backgroundColor","fontSize","windowWidth","padding","extraSpacing","piecesWidth","translate","translateX","translateY","numberOptions","backgroundRadius","piecesSpacing","items","imagesReady","i","slideImage","Image","onload","initSlider","initEvents","push","type","value","options","imageOptions","innerText","src","piecesSlider","canvas","x","y","fontFamily","animation","duration","easing","debug","animateItems","loop","showItems","showPieces","ignore","singly","update","anim","progress","piece","animatables","target","anime","remove","targets","h_ty","p","s_ty","hideItems","hidePieces"],"mappings":"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","sourcesContent":["    console.log('tarba de ta race')\n        let sliderCanvas = document.querySelector('.pieces-slider__canvas');\n        let imagesEl = [].slice.call(document.querySelectorAll('.pieces-slider__image'));\n        let textEl = [].slice.call(document.querySelectorAll('.pieces-slider__text'));\n        let slidesLength = imagesEl.length;\n\n        // Define indexes related variables, as we will use indexes to reference items\n        let currentIndex = 0,\n            currentImageIndex, currentTextIndex, currentNumberIndex;\n        let textIndexes = [];\n        let numberIndexes = [];\n\n        // Update current indexes for image, text and number\n        function updateIndexes() {\n            currentImageIndex = currentIndex * 3;\n            currentTextIndex = currentImageIndex + 1;\n            currentNumberIndex = currentImageIndex + 2;\n        }\n        updateIndexes();\n\n        // Options for images\n        let imageOption = {\n            angle: 45, // rotate item pieces 45deg\n            exraSpacing: {\n                extraX: 100,\n                extraY: 200\n            }, // this extra spacing is needed to cover all the item, because angle != 0\n            pieceWidth: function() {\n                return Pieces.random(50, 200);\n            }, // every piece will have a random width between 50px and 200px\n            ty: function() {\n                    return Pieces.random(-400, 400);\n                } // every piece will be translated in the Y axis a random distance between -400px and 400px\n        }\n\n        // Options for texts\n        let textOptions = {\n            color: 'white',\n            backgroundColor: '#0066CC',\n            fontSize: function() {\n                return windowWidth > 720 ? 50 : 30;\n            },\n            padding: '15 20 10 20',\n            angle: -45,\n            extraSpacing: {\n                extraX: 0,\n                extraY: 300\n            },\n            piecesWidth: function() {\n                return Pieces.random(50, 200);\n            },\n            ty: function() {\n                return Pieces.random(-200, 200);\n            },\n            translate: function() {\n                if (windowWidth > 1120) return {\n                    translateX: 200,\n                    translateY: 200\n                };\n                if (windowWidth > 720) return {\n                    translateX: 0,\n                    translateY: 200\n                };\n                return {\n                    translateX: 0,\n                    translateY: 100\n                };\n            }\n        };\n\n        let numberOptions = {\n            color: 'white',\n            backgroundColor: '#0066CC',\n            backgroundRadius: 300,\n            fontSize: function() {\n                return windowWidth > 720 ? 100 : 50;\n            },\n            padding: function() {\n                return windowWidth > 720 ? '18 35 10 38' : '18 25 10 28';\n            },\n            angle: 0,\n            piecesSpacing: 2,\n            extraSpacing: {\n                extraX: 10,\n                extraY: 10\n            },\n            piecesWidth: 35,\n            ty: function() {\n                return Pieces.random(-200, 200);\n            },\n            translate: function() {\n                if (windowWidth > 1120) return {\n                    translateX: -340,\n                    translateY: -180\n                };\n                if (windowWidth > 720) return {\n                    translateX: -240,\n                    translateY: -180\n                };\n                return {\n                    translateX: -140,\n                    translateY: -100\n                };\n            }\n        };\n\n        let items = [];\n        let imagesReady = 0;\n        for (let i = 0; i < slidesLength; i++) {\n            // Wait for all images to load before initializing the slider and event listeners\n            let slideImage = new Image();\n            slideImage.onload = function() {\n                if (++imagesReady == slidesLength) {\n                    initSlider();\n                    initEvents();\n                }\n            }\n\n\n            // Push all elements for each slide with the corresponding options\n            items.push({\n                type: 'image',\n                value: imagesEl[i],\n                options: imageOptions\n            });\n            items.push({\n                type: 'text',\n                value: textEl[i].innerText,\n                options: textOptions\n            });\n            items.push({\n                type: 'text',\n                value: i + 1,\n                options: numberOptions\n            });\n            // Save indexes\n            textIndexes.push(i * 3 + 1);\n            numberIndexes.push(i * 3 + 2);\n            // Set image src\n            slideImage.src = imagesEl[i].src;\n\n        };\n        console.log(sliderCanvas);\n        // Save the new Pieces instance\n        piecesSlider = new Pieces({\n            canvas: sliderCanvas, // CSS selector to get the canvas\n            items: items, // the Array of items we've built before\n            x: 'centerAll', // center all items in the X axis\n            y: 'centerAll', // center all items in the Y axis\n            piecesSpacing: 1, // default spacing between pieces\n            fontFamily: [\"'Helvetica Neue', sans-serif\"],\n            animation: { // animation options to use in any operation\n                duration: function() {\n                    return Pieces.random(1000, 2000);\n                },\n                easing: 'easeOutQuint'\n            },\n            debug: false // set `debug: true` to enable debug mode\n        });\n\n        // Animate all numbers to rotate clockwise indefinitely\n        piecesSlider.animateItems({\n            items: numberIndexes,\n            duration: 20000,\n            angle: 360,\n            loop: true\n        });\n\n        // Show current items: image, text and number\n        showItems();\n\n        // Show current items: image, text and number\n        function showItems() {\n            // Show image pieces\n\n            piecesSlider.showPieces({\n                items: currentImageIndex,\n                ignore: ['tx'],\n                singly: true,\n                update: (anim) => {\n                    // Stop the pieces animation at 60%, and run a new indefinitely animation of `ty` for each piece\n                    if (anim.progress > 60) {\n                        let piece = anim.animatables[0].target;\n                        let ty = piece.ty;\n                        anime.remove(piece);\n                        anime({\n                            targets: piece,\n                            ty: piece.h_ty < 300 ? [{\n                                value: ty + 10,\n                                duration: 1000\n                            }, {\n                                value: ty - 10,\n                                duration: 2000\n                            }, {\n                                value: ty,\n                                duration: 1000\n                            }] : [{\n                                value: ty - 10,\n                                duration: 1000\n                            }, {\n                                value: ty + 10,\n                                duration: 2000\n                            }, {\n                                value: ty,\n                                duration: 1000\n                            }],\n                            duration: 2000,\n                            easing: 'linear',\n                            loop: true\n                        });\n                    }\n                }\n            });\n            // Show pieces for text and number, using alternate `ty` values\n            piecesSlider.showPieces({\n                items: currentTextIndex\n            });\n            piecesSlider.showPieces({\n                items: currentNumberIndex,\n                ty: function(p, i) {\n                    return p.s_ty - [-3, 3][i % 2];\n                }\n            });\n        }\n\n        // Hide current items: image, text and number\n        function hideItems() {\n            piecesSlider.hidePieces({\n                items: [currentImageIndex, currentTextIndex, currentNumberIndex]\n            });\n        }\n"]},"metadata":{},"sourceType":"module"}