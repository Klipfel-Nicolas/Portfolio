{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/Projects.js\";\nimport { init } from 'emailjs-com';\nimport React, { useEffect } from 'react';\nimport { LinePieces } from 'three';\nimport { projects } from \"../../data/projects-data\";\nimport Project from \"./Project\";\n\nconst Projects = () => {\n  const {\n    project1,\n    project2,\n    project3\n  } = projects;\n  /*useEffect(()=>{\n      // Get all images and texts, get the `canvas` element, and save slider length\n      let sliderCanvas = document.querySelector('.pieces-slider__canvas');\n      let imagesEl = [].slice.call(document.querySelectorAll('.pieces-slider__image'));\n      let textEl = [].slice.call(document.querySelectorAll('.pieces-slider__text'));\n      let slidesLength = imagesEl.length;\n       // Define indexes related variables, as we will use indexes to reference items\n      let currentIndex = 0, currentImageIndex, currentTextIndex, currentNumberIndex;\n      let textIndexes = [];\n      let numberIndexes = [];\n       // Update current indexes for image, text and number\n      function updateIndexes(){\n          currentImageIndex = currentIndex * 3;\n          currentTextIndex = currentImageIndex + 1;\n          currentNumberIndex = currentImageIndex + 2;\n      }\n      updateIndexes();\n       // Options for images\n      let imageOption = {\n          angle : 45, // rotate item pieces 45deg\n          exraSpacing: { extraX: 100, extraY: 200}, // this extra spacing is needed to cover all the item, because angle != 0\n          pieceWidth: function(){ return Pieces.random(50, 200); }, // every piece will have a random width between 50px and 200px\n          ty: function(){ return Pieces.random( -400, 400 ); } // every piece will be translated in the Y axis a random distance between -400px and 400px\n      }\n       // Options for texts\n      let textOptions = {\n          color: 'white',\n          backgroundColor: '#0066CC',\n          fontSize: function() { return windowWidth > 720 ? 50 : 30; },\n          padding: '15 20 10 20',\n          angle: -45,\n          extraSpacing: {extraX: 0, extraY: 300},\n          piecesWidth: function() { return Pieces.random(50, 200); },\n          ty: function() { return Pieces.random(-200, 200); },\n          translate: function() {\n              if (windowWidth > 1120) return {translateX: 200, translateY: 200};\n              if (windowWidth > 720) return {translateX: 0, translateY: 200};\n              return {translateX: 0, translateY: 100};\n              }\n      };\n       let numberOptions = {\n          color: 'white',\n          backgroundColor: '#0066CC',\n          backgroundRadius: 300,\n          fontSize: function() { return windowWidth > 720 ? 100 : 50; },\n          padding: function() { return windowWidth > 720 ? '18 35 10 38' : '18 25 10 28'; },\n          angle: 0,\n          piecesSpacing: 2,\n          extraSpacing: {extraX: 10, extraY: 10},\n          piecesWidth: 35,\n          ty: function() { return Pieces.random(-200, 200); },\n          translate: function() {\n              if (windowWidth > 1120) return {translateX: -340, translateY: -180};\n              if (windowWidth > 720) return {translateX: -240, translateY: -180};\n              return {translateX: -140, translateY: -100};\n          }\n      };\n       let items = [];\n      let imagesReady = 0;\n      for(let i = 0; i < slidesLength; i++){\n          // Wait for all images to load before initializing the slider and event listeners\n          let slideImage = new Image();\n          slideImage.onload = function(){\n              if (++imagesReady == slidesLength){\n                  initSlider();\n                  initEvents();\n              }\n          }\n      }\n   },[])*/\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"projects-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pieces-slider\",\n      children: [/*#__PURE__*/_jsxDEV(Project, {\n        project: project1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        project: project3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"pieces-slider__canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pieces-slider__button pieces-slider__button--prev\",\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pieces-slider__button pieces-slider__button--next\",\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/Projects.js"],"names":["init","React","useEffect","LinePieces","projects","Project","Projects","project1","project2","project3"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAkCL,QAAxC;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYI,sBACI;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEG;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAQ,QAAA,SAAS,EAAC,mDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,mDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApGD;;KAAMH,Q;AAsGN,eAAeA,QAAf","sourcesContent":["import { init } from 'emailjs-com';\nimport React, {useEffect} from 'react';\nimport { LinePieces } from 'three';\n\nimport { projects } from \"../../data/projects-data\";\nimport Project from \"./Project\";\n\nconst Projects = () => {\n    \n    const { project1, project2, project3} = projects;\n    \n\n    /*useEffect(()=>{\n        // Get all images and texts, get the `canvas` element, and save slider length\n        let sliderCanvas = document.querySelector('.pieces-slider__canvas');\n        let imagesEl = [].slice.call(document.querySelectorAll('.pieces-slider__image'));\n        let textEl = [].slice.call(document.querySelectorAll('.pieces-slider__text'));\n        let slidesLength = imagesEl.length;\n\n        // Define indexes related variables, as we will use indexes to reference items\n        let currentIndex = 0, currentImageIndex, currentTextIndex, currentNumberIndex;\n        let textIndexes = [];\n        let numberIndexes = [];\n\n        // Update current indexes for image, text and number\n        function updateIndexes(){\n            currentImageIndex = currentIndex * 3;\n            currentTextIndex = currentImageIndex + 1;\n            currentNumberIndex = currentImageIndex + 2;\n        }\n        updateIndexes();\n\n        // Options for images\n        let imageOption = {\n            angle : 45, // rotate item pieces 45deg\n            exraSpacing: { extraX: 100, extraY: 200}, // this extra spacing is needed to cover all the item, because angle != 0\n            pieceWidth: function(){ return Pieces.random(50, 200); }, // every piece will have a random width between 50px and 200px\n            ty: function(){ return Pieces.random( -400, 400 ); } // every piece will be translated in the Y axis a random distance between -400px and 400px\n        }\n\n        // Options for texts\n        let textOptions = {\n            color: 'white',\n            backgroundColor: '#0066CC',\n            fontSize: function() { return windowWidth > 720 ? 50 : 30; },\n            padding: '15 20 10 20',\n            angle: -45,\n            extraSpacing: {extraX: 0, extraY: 300},\n            piecesWidth: function() { return Pieces.random(50, 200); },\n            ty: function() { return Pieces.random(-200, 200); },\n            translate: function() {\n                if (windowWidth > 1120) return {translateX: 200, translateY: 200};\n                if (windowWidth > 720) return {translateX: 0, translateY: 200};\n                return {translateX: 0, translateY: 100};\n                }\n        };\n\n        let numberOptions = {\n            color: 'white',\n            backgroundColor: '#0066CC',\n            backgroundRadius: 300,\n            fontSize: function() { return windowWidth > 720 ? 100 : 50; },\n            padding: function() { return windowWidth > 720 ? '18 35 10 38' : '18 25 10 28'; },\n            angle: 0,\n            piecesSpacing: 2,\n            extraSpacing: {extraX: 10, extraY: 10},\n            piecesWidth: 35,\n            ty: function() { return Pieces.random(-200, 200); },\n            translate: function() {\n                if (windowWidth > 1120) return {translateX: -340, translateY: -180};\n                if (windowWidth > 720) return {translateX: -240, translateY: -180};\n                return {translateX: -140, translateY: -100};\n            }\n        };\n\n        let items = [];\n        let imagesReady = 0;\n        for(let i = 0; i < slidesLength; i++){\n            // Wait for all images to load before initializing the slider and event listeners\n            let slideImage = new Image();\n            slideImage.onload = function(){\n                if (++imagesReady == slidesLength){\n                    initSlider();\n                    initEvents();\n                }\n            }\n        }\n\n    },[])*/\n    \n\n   \n    \n    return (\n        <main className=\"projects-container\">\n            <div className=\"pieces-slider\">\n                <Project project={project1}/> \n                <Project project={project2}/> \n                <Project project={project3}/>\n            \n                <canvas className=\"pieces-slider__canvas\"></canvas>\n                \n                <button className=\"pieces-slider__button pieces-slider__button--prev\">prev</button>\n                <button className=\"pieces-slider__button pieces-slider__button--next\">next</button>\n            </div>          \n        </main>\n    )\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}