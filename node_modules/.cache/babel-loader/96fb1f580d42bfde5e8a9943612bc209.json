{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/TryThree.js\";\nimport React, { Component } from 'react';\nimport * as THREE from \"three\";\nimport { CSS3DObject, CSS3DRenderer } from 'three-css3drenderer';\nimport TrackballControls from 'three-trackballcontrols';\nimport { table } from \"../data/skillsThree\";\nimport * as TWEEN from 'tween.js';\n\nclass TryThree extends Component {\n  componentDidMount() {\n    // THREE PARAMETRES\n    let scene, camera, renderer, controls;\n    const objects = [];\n    const targets = {\n      grid: [],\n      helix: [],\n      table: [],\n      sphere: []\n    };\n    init();\n    animation();\n\n    function init() {\n      const felidView = 40;\n      const width = window.innerWidth / 2;\n      const height = window.innerHeight / 2;\n      const aspect = width / height;\n      const nearPlane = 0.1;\n      const farPlane = 1000;\n      const WebGloutput = document.getElementById('container');\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(felidView, aspect, nearPlane, farPlane);\n      camera.position.z = 300;\n      renderer = new CSS3DRenderer();\n      renderer.setSize(width, height);\n      renderer.domElement.style.position = 'absolute';\n      WebGloutput.appendChild(renderer.domElement); //ELEMENTS\n\n      for (let i = 0; i < table.length; i += 5) {\n        const element = document.createElement('div');\n        element.className = 'element';\n        element.style.backgroundColor = `rgba( 0, 127, 127, ${Math.random() * 0.5 + 0.25})`;\n        const number = document.createElement('div');\n        number.className = 'number';\n        number.textContent = i / 5 + 1;\n        element.appendChild(number);\n        const symbol = document.createElement('div');\n        symbol.className = 'symbol';\n        symbol.textContent = table[i];\n        element.appendChild(symbol);\n        const detail = document.createElement('div');\n        detail.className = 'detail';\n        detail.innerHTML = `${table[i + 1]} <br/> ${table[i + 2]}}`;\n        element.appendChild(detail);\n        const object = new CSS3DObject(element);\n        object.position.x = Math.random() * 400 - 200;\n        object.position.y = Math.random() * 400 - 200;\n        object.position.z = Math.random() * 400 - 200;\n        scene.add(object);\n        objects.push(object);\n      } //TABLE\n\n\n      for (let i = 0; i < table.length; i += 5) {\n        const object = new THREE.Object3D();\n        object.position.x = table[i + 3] * 140 - width; //1260\n\n        object.position.y = -table[i + 4] * 180 + height; //1000\n\n        object.position.z = 0;\n        targets.table.push(object);\n      } //SPHERE\n\n\n      function sphere() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = Math.acos(-1 + 2 * i / objects.length);\n          let theta = Math.sqrt(objects.length * Math.PI) * phi;\n          var object = new THREE.Object3D();\n          object.position.x = 800 * Math.cos(theta) * Math.sin(phi);\n          object.position.y = 800 * Math.sin(theta) * Math.sin(phi);\n          object.position.z = 800 * Math.cos(phi); //rotation object\n\n          vector.copy(object.position).multiplyScalar(2);\n          object.lookAt(vector);\n          targets.sphere.push(object);\n        }\n      }\n\n      sphere(); // HELIX\n\n      function helix() {\n        const vector = new THREE.Vector3();\n\n        for (let i = 0; i < objects.length; ++i) {\n          let phi = i * 0.739 + Math.PI;\n          const object = new THREE.Object3D();\n          object.position.x = 800 * Math.sin(phi);\n          object.position.y = -(i * 8) + 450;\n          object.position.z = 800 * Math.cos(phi + Math.PI);\n          object.scale.set(1.1, 1.1, 1.1);\n          vector.x = object.position.x * 2;\n          vector.y = object.position.y;\n          vector.z = object.position.z * 2;\n          object.lookAt(vector);\n          targets.helix.push(object);\n        }\n      }\n\n      helix(); //GRID \n\n      for (let i = 0; i < objects.Length; ++i) {\n        const object = new THREE.Object3D();\n        object.position.x = 360 * (i % 5) - 800;\n        object.position.y = -360 * ((i / 2 >> 0) % 5) + 700; // Bizare\n\n        object.position.z = -700 * (i / 25 >> 0);\n        targets.grid.push(object);\n      }\n\n      renderer = new CSS3DRenderer();\n      renderer.setSize(window.innerWidth / 2, window.innerHeight / 2);\n      renderer.domElement.style.position = 'absolute';\n      document.getElementById('container').appendChild(renderer.domElement);\n      controls = new TrackballControls(camera, renderer.domElement);\n      controls.rotateSpeed = 0.5;\n      controls.minDistance = 500;\n      controls.maxDistance = 6000;\n      controls.addEventListener('change', render);\n      const gridBtn = document.getElementById('grid');\n      const tableBtn = document.getElementById('table');\n      const helixBtn = document.getElementById('helix');\n      const sphereBtn = document.getElementById('sphere');\n      console.log(targets);\n      gridBtn.addEventListener('click', function () {\n        transform(targets.grid, 2000);\n      }, false);\n      tableBtn.addEventListener('click', function () {\n        transform(targets.table, 2000);\n      }, false);\n      helixBtn.addEventListener('click', function () {\n        transform(targets.helix, 2000);\n      }, false);\n      sphereBtn.addEventListener('click', function () {\n        transform(targets.sphere, 2000);\n      }, false);\n    }\n\n    ;\n\n    function transform(targets, duration) {\n      TWEEN.removeAll();\n\n      for (let i = 0; i < objects.length; ++i) {\n        let object = objects[i];\n        let target = targets[i];\n        new TWEEN.Tween(object.position).to({\n          x: target.position.x,\n          y: target.position.y,\n          z: target.position.z\n        }, Math.random() * duration + duration).easing(TWEEN.Easing.Exponential.InOut).start();\n      }\n\n      new TWEEN.Tween({}).to({}, duration * 2).onUpdate(render).start();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / 2 / (window.innerHeight / 2);\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth / 2, window.innerHeight / 2);\n      render();\n    }\n\n    function animation() {\n      TWEEN.update();\n      controls.update();\n      requestAnimationFrame(animation);\n    }\n\n    init();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"table\",\n          children: \"TABLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sphere\",\n          children: \"SPHERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"helix\",\n          children: \"HELIX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"grid\",\n          children: \"GRID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TryThree;","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/TryThree.js"],"names":["React","Component","THREE","CSS3DObject","CSS3DRenderer","TrackballControls","table","TWEEN","TryThree","componentDidMount","scene","camera","renderer","controls","objects","targets","grid","helix","sphere","init","animation","felidView","width","window","innerWidth","height","innerHeight","aspect","nearPlane","farPlane","WebGloutput","document","getElementById","Scene","PerspectiveCamera","position","z","setSize","domElement","style","appendChild","i","length","element","createElement","className","backgroundColor","Math","random","number","textContent","symbol","detail","innerHTML","object","x","y","add","push","Object3D","vector","Vector3","phi","acos","theta","sqrt","PI","cos","sin","copy","multiplyScalar","lookAt","scale","set","Length","rotateSpeed","minDistance","maxDistance","addEventListener","render","gridBtn","tableBtn","helixBtn","sphereBtn","console","log","transform","duration","removeAll","target","Tween","to","easing","Easing","Exponential","InOut","start","onUpdate","onWindowResize","updateProjectionMatrix","update","requestAnimationFrame"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport * as THREE from \"three\";\nimport { CSS3DObject, CSS3DRenderer } from 'three-css3drenderer';\nimport TrackballControls from 'three-trackballcontrols';\nimport { table } from \"../data/skillsThree\";\nimport * as TWEEN from 'tween.js'\n\nclass TryThree extends Component {\n\n\n    componentDidMount(){\n        \n        // THREE PARAMETRES\n        let scene, camera, renderer, controls;\n        const objects = [];\n        const targets = {\n            grid: [],\n            helix: [],\n            table:[],\n            sphere:[]\n        };\n        init();\n\t\t\tanimation();\n\n        function init(){\n            const felidView = 40;\n            const width = window.innerWidth/2;\n            const height = window.innerHeight/2;\n            const aspect = width / height;\n            const nearPlane = 0.1;\n            const farPlane = 1000;\n            const WebGloutput = document.getElementById('container');\n\n            scene = new THREE.Scene();\n            \n            camera = new THREE.PerspectiveCamera( felidView, aspect, nearPlane, farPlane);\n            camera.position.z = 300;\n\n            renderer = new CSS3DRenderer();\n            renderer.setSize( width, height);\n            renderer.domElement.style.position = 'absolute';\n            WebGloutput.appendChild( renderer.domElement);\n       \n        //ELEMENTS\n        \n        \n            for( let i=0; i < table.length; i +=5 ) {\n                const element = document.createElement('div');\n                element.className = 'element';\n                element.style.backgroundColor = `rgba( 0, 127, 127, ${ Math.random() * 0.5 + 0.25})`;\n\n                const number = document.createElement('div');\n                number.className = 'number';\n                number.textContent = i / 5 + 1;\n                element.appendChild(number);\n\n                const symbol = document.createElement('div');\n                symbol.className = 'symbol';\n                symbol.textContent = table[ i ];\n                element.appendChild(symbol);\n\n                const detail = document.createElement('div');\n                detail.className = 'detail';\n                detail.innerHTML = `${ table[ i+1 ]} <br/> ${ table[ i+2 ]}}`;\n                element.appendChild(detail);\n\n                const object = new CSS3DObject( element );\n                object.position.x = Math.random() * 400 - 200 ;\n                object.position.y = Math.random() * 400 - 200 ;\n                object.position.z = Math.random() * 400 - 200 ;\n\n                \n                scene.add(object);\n                objects.push( object );\n            } \n\n    //TABLE\n            \n                for (let i = 0; i<table.length; i +=5){\n                    const object = new THREE.Object3D();\n\n                    object.position.x = table[i + 3] * 140 - width; //1260\n                    object.position.y = -table[i + 4] * 180 + height; //1000\n                    object.position.z = 0;\n\n                    targets.table.push(object);\n                }\n            \n\n    //SPHERE\n            function sphere(){\n                const vector = new THREE.Vector3();\n\n                for (let i =0; i< objects.length; ++i){\n                    let phi = Math.acos(-1 + ( 2 * i )/ objects.length);\n                    let theta = Math.sqrt( objects.length * Math.PI ) * phi;\n                    var object = new THREE.Object3D();\n\n                    object.position.x = 800 * Math.cos( theta ) * Math.sin( phi );\n                    object.position.y = 800 * Math.sin( theta ) * Math.sin( phi ); \n                    object.position.z = 800 * Math.cos( phi );\n\n                    //rotation object\n\n                    vector.copy( object.position ).multiplyScalar(2);\n                    object.lookAt( vector );\n                    targets.sphere.push( object );\n                }\n            }\n            sphere()\n    // HELIX\n            function helix(){\n                const vector = new THREE.Vector3();\n\n                for(let i=0; i<objects.length; ++i){\n\n                    let phi = i * 0.739 + Math.PI;\n                    const object = new THREE.Object3D();\n                    object.position.x = 800  * Math.sin( phi );\n                    object.position.y = -( i * 8 ) + 450;\n                    object.position.z = 800  * Math.cos( phi + Math.PI );\n            \n                    object.scale.set( 1.1, 1.1, 1.1 );\n            \n                    vector.x = object.position.x * 2;\n                    vector.y = object.position.y;\n                    vector.z = object.position.z * 2;\n            \n                    object.lookAt( vector );\n                    targets.helix.push( object );\n\n                }\n            }\n            \n            helix()\n    //GRID \n            \n                for (let i =0 ; i < objects.Length; ++i ) {\n    \n                    const object      = new THREE.Object3D();\n            \n                    object.position.x =  360  * ( i   % 5) - 800;\n                    object.position.y = -360  * ( ( i /  2 >> 0 ) % 5 ) + 700; // Bizare\n                    object.position.z = -700  * ( i   / 25 >> 0 );\n            \n                    targets.grid.push( object );\n                    \n                }\n    \n\n            renderer = new CSS3DRenderer();\n\t\t\t\trenderer.setSize( (window.innerWidth/2), (window.innerHeight/2) );\n\t\t\t\trenderer.domElement.style.position = 'absolute';\n                document.getElementById( 'container' ).appendChild( renderer.domElement );\n                \n                controls = new TrackballControls( camera, renderer.domElement );\n\t\t\t\tcontrols.rotateSpeed = 0.5;\n\t\t\t\tcontrols.minDistance = 500;\n\t\t\t\tcontrols.maxDistance = 6000;\n\t\t\t\tcontrols.addEventListener( 'change', render );\n\n            const gridBtn = document.getElementById('grid');\n            const tableBtn = document.getElementById('table');\n            const helixBtn = document.getElementById('helix');\n            const sphereBtn = document.getElementById('sphere');\n\n            console.log(targets);\n            gridBtn.addEventListener('click', function() { transform( targets.grid, 2000 )}, false );\n            tableBtn.addEventListener('click', function() { transform( targets.table, 2000 ) }, false );\n            helixBtn.addEventListener('click', function() { transform( targets.helix, 2000 ) }, false );\n            sphereBtn.addEventListener('click', function() { transform( targets.sphere, 2000 ) }, false );\n        };\n        \n        function transform( targets, duration){\n            TWEEN.removeAll();\n\n            for(let i = 0; i< objects.length; ++i){\n                let object = objects[i];\n                let target = targets[i];\n\n                new TWEEN.Tween(object.position)\n                .to({ x: target.position.x, y: target.position.y, z: target.position.z}, Math.random() * duration + duration)\n                .easing( TWEEN.Easing.Exponential.InOut )\n                .start();\n            }\n            new TWEEN.Tween({})\n            .to({}, duration * 2)\n            .onUpdate( render )\n            .start();\n        }\n\n        function render() {\n\n            renderer.render( scene, camera );\n\n        }\n\n        function onWindowResize(){\n            camera.aspect = (window.innerWidth / 2 ) / (window.innerHeight / 2 );\n            camera.updateProjectionMatrix();\n\n            renderer.setSize( (window.innerWidth/2), (window.innerHeight/2));\n            render();\n        }\n\n        function animation(){\n            TWEEN.update();\n            controls.update();\n            requestAnimationFrame( animation );\n        }\n\n    init()\n    }\n    \n\n    render () {\n        \n        return (\n            <div id=\"container\">\n    \t     \n                <div id=\"menu\">\n                    <button id=\"table\">TABLE</button>\n                    <button id=\"sphere\">SPHERE</button>\n                    <button id=\"helix\">HELIX</button>\n                    <button id=\"grid\">GRID</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TryThree;"]},"metadata":{},"sourceType":"module"}