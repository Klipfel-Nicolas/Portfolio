{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/ProjectList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { BoxGeometry } from \"three\";\n\nconst ProjectList = () => {\n  _s();\n\n  useEffect(() => {\n    let camera, scene, renderer;\n    init();\n    animate();\n\n    function init() {\n      const container = document.getElementById('#li-container');\n      const width = container.offsetWidth;\n      const height = container.offsetHeight;\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(width, height);\n      document.body.appendChild(renderer.domElement);\n      camera = new THREE.PerspectiveCamera(70, width / height, 1, 1000);\n      camera.position.z = 300;\n      scene = new THREE.Scene();\n      const geometry = new BoxGeometry(120, 120, 120);\n      const material = new THREE.MeshBasicMaterial({\n        color: ' #66fad3',\n        wireframe: true\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.position.x = -100;\n      scene.add(mesh);\n    }\n\n    ;\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      for (let i = 0; i < scene.children.length; i++) {\n        const child = scene.children[i];\n        child.rotation.x += 0.005;\n        child.rotation.y += 0.01;\n      } //composer.render();\n\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"li-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProjectList;\nexport default ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/Users/klipfelnicolas/Desktop/dossier web/ProjetGit/Portfolio/client/src/components/projects/ProjectList.js"],"names":["React","useEffect","THREE","BoxGeometry","ProjectList","camera","scene","renderer","init","animate","container","document","getElementById","width","offsetWidth","height","offsetHeight","WebGLRenderer","setSize","body","appendChild","domElement","PerspectiveCamera","position","z","Scene","geometry","material","MeshBasicMaterial","color","wireframe","mesh","Mesh","x","add","requestAnimationFrame","i","children","length","child","rotation","y"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtBH,EAAAA,SAAS,CAAC,MAAM;AAEhB,QAAII,MAAJ,EAAYC,KAAZ,EAAmBC,QAAnB;AAEAC,IAAAA,IAAI;AACJC,IAAAA,OAAO;;AAEP,aAASD,IAAT,GAAe;AACX,YAAME,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAlB;AACA,YAAMC,KAAK,GAAGH,SAAS,CAACI,WAAxB;AACA,YAAMC,MAAM,GAAGL,SAAS,CAACM,YAAzB;AAEAT,MAAAA,QAAQ,GAAG,IAAIL,KAAK,CAACe,aAAV,EAAX;AACAV,MAAAA,QAAQ,CAACW,OAAT,CAAiBL,KAAjB,EAAwBE,MAAxB;AACAJ,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0Bb,QAAQ,CAACc,UAAnC;AAEAhB,MAAAA,MAAM,GAAG,IAAIH,KAAK,CAACoB,iBAAV,CAA6B,EAA7B,EAAiCT,KAAK,GAACE,MAAvC,EAA+C,CAA/C,EAAkD,IAAlD,CAAT;AACAV,MAAAA,MAAM,CAACkB,QAAP,CAAgBC,CAAhB,GAAoB,GAApB;AAEAlB,MAAAA,KAAK,GAAG,IAAIJ,KAAK,CAACuB,KAAV,EAAR;AAEA,YAAMC,QAAQ,GAAG,IAAIvB,WAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAjB;AACA,YAAMwB,QAAQ,GAAG,IAAIzB,KAAK,CAAC0B,iBAAV,CAA4B;AAAEC,QAAAA,KAAK,EAAC,UAAR;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAA5B,CAAjB;AAEA,YAAMC,IAAI,GAAG,IAAI7B,KAAK,CAAC8B,IAAV,CAAgBN,QAAhB,EAA0BC,QAA1B,CAAb;AACAI,MAAAA,IAAI,CAACR,QAAL,CAAcU,CAAd,GAAkB,CAAC,GAAnB;AACA3B,MAAAA,KAAK,CAAC4B,GAAN,CAAWH,IAAX;AACH;;AAAA;;AAED,aAAStB,OAAT,GAAmB;AAEf0B,MAAAA,qBAAqB,CAAE1B,OAAF,CAArB;;AAIA,WAAM,IAAI2B,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG9B,KAAK,CAAC+B,QAAN,CAAeC,MAApC,EAA4CF,CAAC,EAA7C,EAAmD;AAE/C,cAAMG,KAAK,GAAGjC,KAAK,CAAC+B,QAAN,CAAgBD,CAAhB,CAAd;AAEAG,QAAAA,KAAK,CAACC,QAAN,CAAeP,CAAf,IAAoB,KAApB;AACAM,QAAAA,KAAK,CAACC,QAAN,CAAeC,CAAf,IAAoB,IAApB;AAEH,OAbc,CAef;;AAEH;AAEA,GAhDQ,EAgDN,EAhDM,CAAT;AAmDA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1DD;;GAAMrC,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { BoxGeometry } from \"three\";\n\nconst ProjectList = () => {\n    \n    useEffect(() => {\n        \n    let camera, scene, renderer;\n\n    init();\n    animate();\n        \n    function init(){\n        const container = document.getElementById('#li-container');\n        const width = container.offsetWidth;\n        const height = container.offsetHeight;\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setSize(width, height);\n        document.body.appendChild(renderer.domElement);\n\n        camera = new THREE.PerspectiveCamera (70, width/height, 1, 1000);\n        camera.position.z = 300;\n\n        scene = new THREE.Scene();\n\n        const geometry = new BoxGeometry( 120, 120, 120);\n        const material = new THREE.MeshBasicMaterial({ color:' #66fad3', wireframe: true });\n\n        const mesh = new THREE.Mesh( geometry, material);\n        mesh.position.x = -100;\n        scene.add( mesh);\n    };\n\n    function animate() {\n\n        requestAnimationFrame( animate );\n\n        \n\n        for ( let i = 0; i < scene.children.length; i ++ ) {\n\n            const child = scene.children[ i ];\n\n            child.rotation.x += 0.005;\n            child.rotation.y += 0.01;\n\n        }\n\n        //composer.render();\n\n    }\n\n    }, [])\n    \n    \n    return (\n        <div id=\"li-container\">\n            \n        </div>\n    )\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}